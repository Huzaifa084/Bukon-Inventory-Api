// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin_api.proto

package io.bokun.inventory.plugin.api.grpc;

/**
 * <pre>
 * A response which tells which products are available over given date period.
 * </pre>
 *
 * Protobuf type {@code io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse}
 */
public  final class ProductsAvailabilityResponse extends
    com.google.protobuf.GeneratedMessageLite<
        ProductsAvailabilityResponse, ProductsAvailabilityResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse)
    ProductsAvailabilityResponseOrBuilder {
  private ProductsAvailabilityResponse() {
    productId_ = "";
  }
  public static final int PRODUCTID_FIELD_NUMBER = 1;
  private java.lang.String productId_;
  /**
   * <pre>
   * External product id. Mandatory.
   * </pre>
   *
   * <code>string productId = 1;</code>
   * @return The productId.
   */
  @java.lang.Override
  public java.lang.String getProductId() {
    return productId_;
  }
  /**
   * <pre>
   * External product id. Mandatory.
   * </pre>
   *
   * <code>string productId = 1;</code>
   * @return The bytes for productId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProductIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(productId_);
  }
  /**
   * <pre>
   * External product id. Mandatory.
   * </pre>
   *
   * <code>string productId = 1;</code>
   * @param value The productId to set.
   */
  private void setProductId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    productId_ = value;
  }
  /**
   * <pre>
   * External product id. Mandatory.
   * </pre>
   *
   * <code>string productId = 1;</code>
   */
  private void clearProductId() {
    
    productId_ = getDefaultInstance().getProductId();
  }
  /**
   * <pre>
   * External product id. Mandatory.
   * </pre>
   *
   * <code>string productId = 1;</code>
   * @param value The bytes for productId to set.
   */
  private void setProductIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    productId_ = value.toStringUtf8();
    
  }

  public static final int ACTUALCHECKDONE_FIELD_NUMBER = 2;
  private boolean actualCheckDone_;
  /**
   * <pre>
   * Whether the actual availability check was done. Some APIs might not support checking for multiple product availability over date range (instead
   * they typically support checking availability of one product and sometimes - for a very limited range only). As a workaround for this problem,
   * plugin might return fake availability response and then next step will clarify that. For fake responses, this should be set to false.
   * </pre>
   *
   * <code>bool actualCheckDone = 2;</code>
   * @return The actualCheckDone.
   */
  @java.lang.Override
  public boolean getActualCheckDone() {
    return actualCheckDone_;
  }
  /**
   * <pre>
   * Whether the actual availability check was done. Some APIs might not support checking for multiple product availability over date range (instead
   * they typically support checking availability of one product and sometimes - for a very limited range only). As a workaround for this problem,
   * plugin might return fake availability response and then next step will clarify that. For fake responses, this should be set to false.
   * </pre>
   *
   * <code>bool actualCheckDone = 2;</code>
   * @param value The actualCheckDone to set.
   */
  private void setActualCheckDone(boolean value) {
    
    actualCheckDone_ = value;
  }
  /**
   * <pre>
   * Whether the actual availability check was done. Some APIs might not support checking for multiple product availability over date range (instead
   * they typically support checking availability of one product and sometimes - for a very limited range only). As a workaround for this problem,
   * plugin might return fake availability response and then next step will clarify that. For fake responses, this should be set to false.
   * </pre>
   *
   * <code>bool actualCheckDone = 2;</code>
   */
  private void clearActualCheckDone() {
    
    actualCheckDone_ = false;
  }

  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A response which tells which products are available over given date period.
   * </pre>
   *
   * Protobuf type {@code io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse)
      io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponseOrBuilder {
    // Construct using io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * External product id. Mandatory.
     * </pre>
     *
     * <code>string productId = 1;</code>
     * @return The productId.
     */
    @java.lang.Override
    public java.lang.String getProductId() {
      return instance.getProductId();
    }
    /**
     * <pre>
     * External product id. Mandatory.
     * </pre>
     *
     * <code>string productId = 1;</code>
     * @return The bytes for productId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProductIdBytes() {
      return instance.getProductIdBytes();
    }
    /**
     * <pre>
     * External product id. Mandatory.
     * </pre>
     *
     * <code>string productId = 1;</code>
     * @param value The productId to set.
     * @return This builder for chaining.
     */
    public Builder setProductId(
        java.lang.String value) {
      copyOnWrite();
      instance.setProductId(value);
      return this;
    }
    /**
     * <pre>
     * External product id. Mandatory.
     * </pre>
     *
     * <code>string productId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearProductId() {
      copyOnWrite();
      instance.clearProductId();
      return this;
    }
    /**
     * <pre>
     * External product id. Mandatory.
     * </pre>
     *
     * <code>string productId = 1;</code>
     * @param value The bytes for productId to set.
     * @return This builder for chaining.
     */
    public Builder setProductIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setProductIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Whether the actual availability check was done. Some APIs might not support checking for multiple product availability over date range (instead
     * they typically support checking availability of one product and sometimes - for a very limited range only). As a workaround for this problem,
     * plugin might return fake availability response and then next step will clarify that. For fake responses, this should be set to false.
     * </pre>
     *
     * <code>bool actualCheckDone = 2;</code>
     * @return The actualCheckDone.
     */
    @java.lang.Override
    public boolean getActualCheckDone() {
      return instance.getActualCheckDone();
    }
    /**
     * <pre>
     * Whether the actual availability check was done. Some APIs might not support checking for multiple product availability over date range (instead
     * they typically support checking availability of one product and sometimes - for a very limited range only). As a workaround for this problem,
     * plugin might return fake availability response and then next step will clarify that. For fake responses, this should be set to false.
     * </pre>
     *
     * <code>bool actualCheckDone = 2;</code>
     * @param value The actualCheckDone to set.
     * @return This builder for chaining.
     */
    public Builder setActualCheckDone(boolean value) {
      copyOnWrite();
      instance.setActualCheckDone(value);
      return this;
    }
    /**
     * <pre>
     * Whether the actual availability check was done. Some APIs might not support checking for multiple product availability over date range (instead
     * they typically support checking availability of one product and sometimes - for a very limited range only). As a workaround for this problem,
     * plugin might return fake availability response and then next step will clarify that. For fake responses, this should be set to false.
     * </pre>
     *
     * <code>bool actualCheckDone = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearActualCheckDone() {
      copyOnWrite();
      instance.clearActualCheckDone();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "productId_",
            "actualCheckDone_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0007" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse)
  private static final io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse DEFAULT_INSTANCE;
  static {
    ProductsAvailabilityResponse defaultInstance = new ProductsAvailabilityResponse();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ProductsAvailabilityResponse.class, defaultInstance);
  }

  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ProductsAvailabilityResponse> PARSER;

  public static com.google.protobuf.Parser<ProductsAvailabilityResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

