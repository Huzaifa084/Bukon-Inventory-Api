// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin_api.proto

package io.bokun.inventory.plugin.api.grpc;

/**
 * Protobuf type {@code io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest}
 */
public  final class ProductsAvailabilityRequest extends
    com.google.protobuf.GeneratedMessageLite<
        ProductsAvailabilityRequest, ProductsAvailabilityRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest)
    ProductsAvailabilityRequestOrBuilder {
  private ProductsAvailabilityRequest() {
    parameters_ = emptyProtobufList();
    externalProductIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  public static final int PARAMETERS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue> parameters_;
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  @java.lang.Override
  public java.util.List<io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue> getParametersList() {
    return parameters_;
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  public java.util.List<? extends io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValueOrBuilder> 
      getParametersOrBuilderList() {
    return parameters_;
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  @java.lang.Override
  public int getParametersCount() {
    return parameters_.size();
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue getParameters(int index) {
    return parameters_.get(index);
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  public io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValueOrBuilder getParametersOrBuilder(
      int index) {
    return parameters_.get(index);
  }
  private void ensureParametersIsMutable() {
    com.google.protobuf.Internal.ProtobufList<io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue> tmp = parameters_;
    if (!tmp.isModifiable()) {
      parameters_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  private void setParameters(
      int index, io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue value) {
    value.getClass();
  ensureParametersIsMutable();
    parameters_.set(index, value);
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  private void addParameters(io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue value) {
    value.getClass();
  ensureParametersIsMutable();
    parameters_.add(value);
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  private void addParameters(
      int index, io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue value) {
    value.getClass();
  ensureParametersIsMutable();
    parameters_.add(index, value);
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  private void addAllParameters(
      java.lang.Iterable<? extends io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue> values) {
    ensureParametersIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, parameters_);
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  private void clearParameters() {
    parameters_ = emptyProtobufList();
  }
  /**
   * <pre>
   * plugin config parameters
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
   */
  private void removeParameters(int index) {
    ensureParametersIsMutable();
    parameters_.remove(index);
  }

  public static final int RANGE_FIELD_NUMBER = 2;
  private io.bokun.inventory.common.api.grpc.DatePeriod range_;
  /**
   * <pre>
   * Date range (boundaries included) for which you would like to get products
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
   */
  @java.lang.Override
  public boolean hasRange() {
    return range_ != null;
  }
  /**
   * <pre>
   * Date range (boundaries included) for which you would like to get products
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.DatePeriod getRange() {
    return range_ == null ? io.bokun.inventory.common.api.grpc.DatePeriod.getDefaultInstance() : range_;
  }
  /**
   * <pre>
   * Date range (boundaries included) for which you would like to get products
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
   */
  private void setRange(io.bokun.inventory.common.api.grpc.DatePeriod value) {
    value.getClass();
  range_ = value;
    
    }
  /**
   * <pre>
   * Date range (boundaries included) for which you would like to get products
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeRange(io.bokun.inventory.common.api.grpc.DatePeriod value) {
    value.getClass();
  if (range_ != null &&
        range_ != io.bokun.inventory.common.api.grpc.DatePeriod.getDefaultInstance()) {
      range_ =
        io.bokun.inventory.common.api.grpc.DatePeriod.newBuilder(range_).mergeFrom(value).buildPartial();
    } else {
      range_ = value;
    }
    
  }
  /**
   * <pre>
   * Date range (boundaries included) for which you would like to get products
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
   */
  private void clearRange() {  range_ = null;
    
  }

  public static final int REQUIREDCAPACITY_FIELD_NUMBER = 3;
  private long requiredCapacity_;
  /**
   * <pre>
   * How many seats/spaces/pax are required
   * </pre>
   *
   * <code>int64 requiredCapacity = 3;</code>
   * @return The requiredCapacity.
   */
  @java.lang.Override
  public long getRequiredCapacity() {
    return requiredCapacity_;
  }
  /**
   * <pre>
   * How many seats/spaces/pax are required
   * </pre>
   *
   * <code>int64 requiredCapacity = 3;</code>
   * @param value The requiredCapacity to set.
   */
  private void setRequiredCapacity(long value) {
    
    requiredCapacity_ = value;
  }
  /**
   * <pre>
   * How many seats/spaces/pax are required
   * </pre>
   *
   * <code>int64 requiredCapacity = 3;</code>
   */
  private void clearRequiredCapacity() {
    
    requiredCapacity_ = 0L;
  }

  public static final int EXTERNALPRODUCTIDS_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> externalProductIds_;
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @return A list containing the externalProductIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getExternalProductIdsList() {
    return externalProductIds_;
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @return The count of externalProductIds.
   */
  @java.lang.Override
  public int getExternalProductIdsCount() {
    return externalProductIds_.size();
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @param index The index of the element to return.
   * @return The externalProductIds at the given index.
   */
  @java.lang.Override
  public java.lang.String getExternalProductIds(int index) {
    return externalProductIds_.get(index);
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the externalProductIds at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExternalProductIdsBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        externalProductIds_.get(index));
  }
  private void ensureExternalProductIdsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        externalProductIds_;  if (!tmp.isModifiable()) {
      externalProductIds_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @param index The index to set the value at.
   * @param value The externalProductIds to set.
   */
  private void setExternalProductIds(
      int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureExternalProductIdsIsMutable();
    externalProductIds_.set(index, value);
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @param value The externalProductIds to add.
   */
  private void addExternalProductIds(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureExternalProductIdsIsMutable();
    externalProductIds_.add(value);
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @param values The externalProductIds to add.
   */
  private void addAllExternalProductIds(
      java.lang.Iterable<java.lang.String> values) {
    ensureExternalProductIdsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, externalProductIds_);
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   */
  private void clearExternalProductIds() {
    externalProductIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
   * </pre>
   *
   * <code>repeated string externalProductIds = 4;</code>
   * @param value The bytes of the externalProductIds to add.
   */
  private void addExternalProductIdsBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureExternalProductIdsIsMutable();
    externalProductIds_.add(value.toStringUtf8());
  }

  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest)
      io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequestOrBuilder {
    // Construct using io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue> getParametersList() {
      return java.util.Collections.unmodifiableList(
          instance.getParametersList());
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    @java.lang.Override
    public int getParametersCount() {
      return instance.getParametersCount();
    }/**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue getParameters(int index) {
      return instance.getParameters(index);
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder setParameters(
        int index, io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue value) {
      copyOnWrite();
      instance.setParameters(index, value);
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder setParameters(
        int index, io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue.Builder builderForValue) {
      copyOnWrite();
      instance.setParameters(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder addParameters(io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue value) {
      copyOnWrite();
      instance.addParameters(value);
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder addParameters(
        int index, io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue value) {
      copyOnWrite();
      instance.addParameters(index, value);
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder addParameters(
        io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue.Builder builderForValue) {
      copyOnWrite();
      instance.addParameters(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder addParameters(
        int index, io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue.Builder builderForValue) {
      copyOnWrite();
      instance.addParameters(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder addAllParameters(
        java.lang.Iterable<? extends io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue> values) {
      copyOnWrite();
      instance.addAllParameters(values);
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder clearParameters() {
      copyOnWrite();
      instance.clearParameters();
      return this;
    }
    /**
     * <pre>
     * plugin config parameters
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue parameters = 1;</code>
     */
    public Builder removeParameters(int index) {
      copyOnWrite();
      instance.removeParameters(index);
      return this;
    }

    /**
     * <pre>
     * Date range (boundaries included) for which you would like to get products
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
     */
    @java.lang.Override
    public boolean hasRange() {
      return instance.hasRange();
    }
    /**
     * <pre>
     * Date range (boundaries included) for which you would like to get products
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.DatePeriod getRange() {
      return instance.getRange();
    }
    /**
     * <pre>
     * Date range (boundaries included) for which you would like to get products
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
     */
    public Builder setRange(io.bokun.inventory.common.api.grpc.DatePeriod value) {
      copyOnWrite();
      instance.setRange(value);
      return this;
      }
    /**
     * <pre>
     * Date range (boundaries included) for which you would like to get products
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
     */
    public Builder setRange(
        io.bokun.inventory.common.api.grpc.DatePeriod.Builder builderForValue) {
      copyOnWrite();
      instance.setRange(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Date range (boundaries included) for which you would like to get products
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
     */
    public Builder mergeRange(io.bokun.inventory.common.api.grpc.DatePeriod value) {
      copyOnWrite();
      instance.mergeRange(value);
      return this;
    }
    /**
     * <pre>
     * Date range (boundaries included) for which you would like to get products
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.DatePeriod range = 2;</code>
     */
    public Builder clearRange() {  copyOnWrite();
      instance.clearRange();
      return this;
    }

    /**
     * <pre>
     * How many seats/spaces/pax are required
     * </pre>
     *
     * <code>int64 requiredCapacity = 3;</code>
     * @return The requiredCapacity.
     */
    @java.lang.Override
    public long getRequiredCapacity() {
      return instance.getRequiredCapacity();
    }
    /**
     * <pre>
     * How many seats/spaces/pax are required
     * </pre>
     *
     * <code>int64 requiredCapacity = 3;</code>
     * @param value The requiredCapacity to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredCapacity(long value) {
      copyOnWrite();
      instance.setRequiredCapacity(value);
      return this;
    }
    /**
     * <pre>
     * How many seats/spaces/pax are required
     * </pre>
     *
     * <code>int64 requiredCapacity = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredCapacity() {
      copyOnWrite();
      instance.clearRequiredCapacity();
      return this;
    }

    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @return A list containing the externalProductIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getExternalProductIdsList() {
      return java.util.Collections.unmodifiableList(
          instance.getExternalProductIdsList());
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @return The count of externalProductIds.
     */
    @java.lang.Override
    public int getExternalProductIdsCount() {
      return instance.getExternalProductIdsCount();
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @param index The index of the element to return.
     * @return The externalProductIds at the given index.
     */
    @java.lang.Override
    public java.lang.String getExternalProductIds(int index) {
      return instance.getExternalProductIds(index);
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the externalProductIds at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExternalProductIdsBytes(int index) {
      return instance.getExternalProductIdsBytes(index);
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @param index The index to set the value at.
     * @param value The externalProductIds to set.
     * @return This builder for chaining.
     */
    public Builder setExternalProductIds(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setExternalProductIds(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @param value The externalProductIds to add.
     * @return This builder for chaining.
     */
    public Builder addExternalProductIds(
        java.lang.String value) {
      copyOnWrite();
      instance.addExternalProductIds(value);
      return this;
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @param values The externalProductIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllExternalProductIds(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllExternalProductIds(values);
      return this;
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearExternalProductIds() {
      copyOnWrite();
      instance.clearExternalProductIds();
      return this;
    }
    /**
     * <pre>
     * A list of product ids which correspond to product ids on the system this plugin connects to (as opposed to ids of products in Bokun)
     * </pre>
     *
     * <code>repeated string externalProductIds = 4;</code>
     * @param value The bytes of the externalProductIds to add.
     * @return This builder for chaining.
     */
    public Builder addExternalProductIdsBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addExternalProductIdsBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "parameters_",
            io.bokun.inventory.common.api.grpc.PluginConfigurationParameterValue.class,
            "range_",
            "requiredCapacity_",
            "externalProductIds_",
          };
          java.lang.String info =
              "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0002\u0000\u0001\u001b\u0002\t" +
              "\u0003\u0002\u0004\u021a";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest)
  private static final io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest DEFAULT_INSTANCE;
  static {
    ProductsAvailabilityRequest defaultInstance = new ProductsAvailabilityRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ProductsAvailabilityRequest.class, defaultInstance);
  }

  public static io.bokun.inventory.plugin.api.grpc.ProductsAvailabilityRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ProductsAvailabilityRequest> PARSER;

  public static com.google.protobuf.Parser<ProductsAvailabilityRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

