// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.bokun.inventory.common.api.grpc;

/**
 * Protobuf type {@code io.bokun.inventory.common.api.grpc.SuccessfulBooking}
 */
public  final class SuccessfulBooking extends
    com.google.protobuf.GeneratedMessageLite<
        SuccessfulBooking, SuccessfulBooking.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.common.api.grpc.SuccessfulBooking)
    SuccessfulBookingOrBuilder {
  private SuccessfulBooking() {
    bookingConfirmationCode_ = "";
  }
  private int ticketsCase_ = 0;
  private java.lang.Object tickets_;
  public enum TicketsCase {
    TICKETSPERPASSENGER(2),
    BOOKINGTICKET(3),
    TICKETS_NOT_SET(0);
    private final int value;
    private TicketsCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TicketsCase valueOf(int value) {
      return forNumber(value);
    }

    public static TicketsCase forNumber(int value) {
      switch (value) {
        case 2: return TICKETSPERPASSENGER;
        case 3: return BOOKINGTICKET;
        case 0: return TICKETS_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public TicketsCase
  getTicketsCase() {
    return TicketsCase.forNumber(
        ticketsCase_);
  }

  private void clearTickets() {
    ticketsCase_ = 0;
    tickets_ = null;
  }

  public static final int BOOKINGCONFIRMATIONCODE_FIELD_NUMBER = 1;
  private java.lang.String bookingConfirmationCode_;
  /**
   * <pre>
   * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
   * Either case, mandatory.
   * </pre>
   *
   * <code>string bookingConfirmationCode = 1;</code>
   * @return The bookingConfirmationCode.
   */
  @java.lang.Override
  public java.lang.String getBookingConfirmationCode() {
    return bookingConfirmationCode_;
  }
  /**
   * <pre>
   * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
   * Either case, mandatory.
   * </pre>
   *
   * <code>string bookingConfirmationCode = 1;</code>
   * @return The bytes for bookingConfirmationCode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBookingConfirmationCodeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(bookingConfirmationCode_);
  }
  /**
   * <pre>
   * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
   * Either case, mandatory.
   * </pre>
   *
   * <code>string bookingConfirmationCode = 1;</code>
   * @param value The bookingConfirmationCode to set.
   */
  private void setBookingConfirmationCode(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    bookingConfirmationCode_ = value;
  }
  /**
   * <pre>
   * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
   * Either case, mandatory.
   * </pre>
   *
   * <code>string bookingConfirmationCode = 1;</code>
   */
  private void clearBookingConfirmationCode() {
    
    bookingConfirmationCode_ = getDefaultInstance().getBookingConfirmationCode();
  }
  /**
   * <pre>
   * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
   * Either case, mandatory.
   * </pre>
   *
   * <code>string bookingConfirmationCode = 1;</code>
   * @param value The bytes for bookingConfirmationCode to set.
   */
  private void setBookingConfirmationCodeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    bookingConfirmationCode_ = value.toStringUtf8();
    
  }

  public static final int TICKETSPERPASSENGER_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Set if tickets were requested per passenger (yet delivered per pricing category).
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
   */
  @java.lang.Override
  public boolean hasTicketsPerPassenger() {
    return ticketsCase_ == 2;
  }
  /**
   * <pre>
   * Set if tickets were requested per passenger (yet delivered per pricing category).
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory getTicketsPerPassenger() {
    if (ticketsCase_ == 2) {
       return (io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory) tickets_;
    }
    return io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory.getDefaultInstance();
  }
  /**
   * <pre>
   * Set if tickets were requested per passenger (yet delivered per pricing category).
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
   */
  private void setTicketsPerPassenger(io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory value) {
    value.getClass();
  tickets_ = value;
    ticketsCase_ = 2;
  }
  /**
   * <pre>
   * Set if tickets were requested per passenger (yet delivered per pricing category).
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
   */
  private void mergeTicketsPerPassenger(io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory value) {
    value.getClass();
  if (ticketsCase_ == 2 &&
        tickets_ != io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory.getDefaultInstance()) {
      tickets_ = io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory.newBuilder((io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory) tickets_)
          .mergeFrom(value).buildPartial();
    } else {
      tickets_ = value;
    }
    ticketsCase_ = 2;
  }
  /**
   * <pre>
   * Set if tickets were requested per passenger (yet delivered per pricing category).
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
   */
  private void clearTicketsPerPassenger() {
    if (ticketsCase_ == 2) {
      ticketsCase_ = 0;
      tickets_ = null;
    }
  }

  public static final int BOOKINGTICKET_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Set if a single ticket-per-booking was requested.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
   */
  @java.lang.Override
  public boolean hasBookingTicket() {
    return ticketsCase_ == 3;
  }
  /**
   * <pre>
   * Set if a single ticket-per-booking was requested.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Ticket getBookingTicket() {
    if (ticketsCase_ == 3) {
       return (io.bokun.inventory.common.api.grpc.Ticket) tickets_;
    }
    return io.bokun.inventory.common.api.grpc.Ticket.getDefaultInstance();
  }
  /**
   * <pre>
   * Set if a single ticket-per-booking was requested.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
   */
  private void setBookingTicket(io.bokun.inventory.common.api.grpc.Ticket value) {
    value.getClass();
  tickets_ = value;
    ticketsCase_ = 3;
  }
  /**
   * <pre>
   * Set if a single ticket-per-booking was requested.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
   */
  private void mergeBookingTicket(io.bokun.inventory.common.api.grpc.Ticket value) {
    value.getClass();
  if (ticketsCase_ == 3 &&
        tickets_ != io.bokun.inventory.common.api.grpc.Ticket.getDefaultInstance()) {
      tickets_ = io.bokun.inventory.common.api.grpc.Ticket.newBuilder((io.bokun.inventory.common.api.grpc.Ticket) tickets_)
          .mergeFrom(value).buildPartial();
    } else {
      tickets_ = value;
    }
    ticketsCase_ = 3;
  }
  /**
   * <pre>
   * Set if a single ticket-per-booking was requested.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
   */
  private void clearBookingTicket() {
    if (ticketsCase_ == 3) {
      ticketsCase_ = 0;
      tickets_ = null;
    }
  }

  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.common.api.grpc.SuccessfulBooking prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code io.bokun.inventory.common.api.grpc.SuccessfulBooking}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.common.api.grpc.SuccessfulBooking, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.common.api.grpc.SuccessfulBooking)
      io.bokun.inventory.common.api.grpc.SuccessfulBookingOrBuilder {
    // Construct using io.bokun.inventory.common.api.grpc.SuccessfulBooking.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public TicketsCase
        getTicketsCase() {
      return instance.getTicketsCase();
    }

    public Builder clearTickets() {
      copyOnWrite();
      instance.clearTickets();
      return this;
    }


    /**
     * <pre>
     * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
     * Either case, mandatory.
     * </pre>
     *
     * <code>string bookingConfirmationCode = 1;</code>
     * @return The bookingConfirmationCode.
     */
    @java.lang.Override
    public java.lang.String getBookingConfirmationCode() {
      return instance.getBookingConfirmationCode();
    }
    /**
     * <pre>
     * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
     * Either case, mandatory.
     * </pre>
     *
     * <code>string bookingConfirmationCode = 1;</code>
     * @return The bytes for bookingConfirmationCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBookingConfirmationCodeBytes() {
      return instance.getBookingConfirmationCodeBytes();
    }
    /**
     * <pre>
     * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
     * Either case, mandatory.
     * </pre>
     *
     * <code>string bookingConfirmationCode = 1;</code>
     * @param value The bookingConfirmationCode to set.
     * @return This builder for chaining.
     */
    public Builder setBookingConfirmationCode(
        java.lang.String value) {
      copyOnWrite();
      instance.setBookingConfirmationCode(value);
      return this;
    }
    /**
     * <pre>
     * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
     * Either case, mandatory.
     * </pre>
     *
     * <code>string bookingConfirmationCode = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBookingConfirmationCode() {
      copyOnWrite();
      instance.clearBookingConfirmationCode();
      return this;
    }
    /**
     * <pre>
     * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
     * Either case, mandatory.
     * </pre>
     *
     * <code>string bookingConfirmationCode = 1;</code>
     * @param value The bytes for bookingConfirmationCode to set.
     * @return This builder for chaining.
     */
    public Builder setBookingConfirmationCodeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBookingConfirmationCodeBytes(value);
      return this;
    }

    /**
     * <pre>
     * Set if tickets were requested per passenger (yet delivered per pricing category).
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
     */
    @java.lang.Override
    public boolean hasTicketsPerPassenger() {
      return instance.hasTicketsPerPassenger();
    }
    /**
     * <pre>
     * Set if tickets were requested per passenger (yet delivered per pricing category).
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory getTicketsPerPassenger() {
      return instance.getTicketsPerPassenger();
    }
    /**
     * <pre>
     * Set if tickets were requested per passenger (yet delivered per pricing category).
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
     */
    public Builder setTicketsPerPassenger(io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory value) {
      copyOnWrite();
      instance.setTicketsPerPassenger(value);
      return this;
    }
    /**
     * <pre>
     * Set if tickets were requested per passenger (yet delivered per pricing category).
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
     */
    public Builder setTicketsPerPassenger(
        io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory.Builder builderForValue) {
      copyOnWrite();
      instance.setTicketsPerPassenger(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Set if tickets were requested per passenger (yet delivered per pricing category).
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
     */
    public Builder mergeTicketsPerPassenger(io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory value) {
      copyOnWrite();
      instance.mergeTicketsPerPassenger(value);
      return this;
    }
    /**
     * <pre>
     * Set if tickets were requested per passenger (yet delivered per pricing category).
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
     */
    public Builder clearTicketsPerPassenger() {
      copyOnWrite();
      instance.clearTicketsPerPassenger();
      return this;
    }

    /**
     * <pre>
     * Set if a single ticket-per-booking was requested.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
     */
    @java.lang.Override
    public boolean hasBookingTicket() {
      return instance.hasBookingTicket();
    }
    /**
     * <pre>
     * Set if a single ticket-per-booking was requested.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Ticket getBookingTicket() {
      return instance.getBookingTicket();
    }
    /**
     * <pre>
     * Set if a single ticket-per-booking was requested.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
     */
    public Builder setBookingTicket(io.bokun.inventory.common.api.grpc.Ticket value) {
      copyOnWrite();
      instance.setBookingTicket(value);
      return this;
    }
    /**
     * <pre>
     * Set if a single ticket-per-booking was requested.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
     */
    public Builder setBookingTicket(
        io.bokun.inventory.common.api.grpc.Ticket.Builder builderForValue) {
      copyOnWrite();
      instance.setBookingTicket(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Set if a single ticket-per-booking was requested.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
     */
    public Builder mergeBookingTicket(io.bokun.inventory.common.api.grpc.Ticket value) {
      copyOnWrite();
      instance.mergeBookingTicket(value);
      return this;
    }
    /**
     * <pre>
     * Set if a single ticket-per-booking was requested.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
     */
    public Builder clearBookingTicket() {
      copyOnWrite();
      instance.clearBookingTicket();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.common.api.grpc.SuccessfulBooking)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.common.api.grpc.SuccessfulBooking();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "tickets_",
            "ticketsCase_",
            "bookingConfirmationCode_",
            io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory.class,
            io.bokun.inventory.common.api.grpc.Ticket.class,
          };
          java.lang.String info =
              "\u0000\u0003\u0001\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002<\u0000" +
              "\u0003<\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.common.api.grpc.SuccessfulBooking> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.common.api.grpc.SuccessfulBooking.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.common.api.grpc.SuccessfulBooking>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.common.api.grpc.SuccessfulBooking)
  private static final io.bokun.inventory.common.api.grpc.SuccessfulBooking DEFAULT_INSTANCE;
  static {
    SuccessfulBooking defaultInstance = new SuccessfulBooking();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SuccessfulBooking.class, defaultInstance);
  }

  public static io.bokun.inventory.common.api.grpc.SuccessfulBooking getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SuccessfulBooking> PARSER;

  public static com.google.protobuf.Parser<SuccessfulBooking> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

