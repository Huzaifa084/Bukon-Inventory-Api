// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.bokun.inventory.common.api.grpc;

/**
 * Protobuf type {@code io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval}
 */
public  final class OpeningHoursTimeInterval extends
    com.google.protobuf.GeneratedMessageLite<
        OpeningHoursTimeInterval, OpeningHoursTimeInterval.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval)
    OpeningHoursTimeIntervalOrBuilder {
  private OpeningHoursTimeInterval() {
    openFrom_ = "";
  }
  public static final int OPENFROM_FIELD_NUMBER = 1;
  private java.lang.String openFrom_;
  /**
   * <pre>
   * Format: HH:mm
   * </pre>
   *
   * <code>string openFrom = 1;</code>
   * @return The openFrom.
   */
  @java.lang.Override
  public java.lang.String getOpenFrom() {
    return openFrom_;
  }
  /**
   * <pre>
   * Format: HH:mm
   * </pre>
   *
   * <code>string openFrom = 1;</code>
   * @return The bytes for openFrom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOpenFromBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(openFrom_);
  }
  /**
   * <pre>
   * Format: HH:mm
   * </pre>
   *
   * <code>string openFrom = 1;</code>
   * @param value The openFrom to set.
   */
  private void setOpenFrom(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    openFrom_ = value;
  }
  /**
   * <pre>
   * Format: HH:mm
   * </pre>
   *
   * <code>string openFrom = 1;</code>
   */
  private void clearOpenFrom() {
    
    openFrom_ = getDefaultInstance().getOpenFrom();
  }
  /**
   * <pre>
   * Format: HH:mm
   * </pre>
   *
   * <code>string openFrom = 1;</code>
   * @param value The bytes for openFrom to set.
   */
  private void setOpenFromBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    openFrom_ = value.toStringUtf8();
    
  }

  public static final int OPENFORHOURS_FIELD_NUMBER = 2;
  private int openForHours_;
  /**
   * <pre>
   * For how many hours open since openFrom
   * </pre>
   *
   * <code>int32 openForHours = 2;</code>
   * @return The openForHours.
   */
  @java.lang.Override
  public int getOpenForHours() {
    return openForHours_;
  }
  /**
   * <pre>
   * For how many hours open since openFrom
   * </pre>
   *
   * <code>int32 openForHours = 2;</code>
   * @param value The openForHours to set.
   */
  private void setOpenForHours(int value) {
    
    openForHours_ = value;
  }
  /**
   * <pre>
   * For how many hours open since openFrom
   * </pre>
   *
   * <code>int32 openForHours = 2;</code>
   */
  private void clearOpenForHours() {
    
    openForHours_ = 0;
  }

  public static final int OPENFORMINUTES_FIELD_NUMBER = 3;
  private int openForMinutes_;
  /**
   * <pre>
   * For how many minutes open since openFrom. Must be within [0..59]
   * </pre>
   *
   * <code>int32 openForMinutes = 3;</code>
   * @return The openForMinutes.
   */
  @java.lang.Override
  public int getOpenForMinutes() {
    return openForMinutes_;
  }
  /**
   * <pre>
   * For how many minutes open since openFrom. Must be within [0..59]
   * </pre>
   *
   * <code>int32 openForMinutes = 3;</code>
   * @param value The openForMinutes to set.
   */
  private void setOpenForMinutes(int value) {
    
    openForMinutes_ = value;
  }
  /**
   * <pre>
   * For how many minutes open since openFrom. Must be within [0..59]
   * </pre>
   *
   * <code>int32 openForMinutes = 3;</code>
   */
  private void clearOpenForMinutes() {
    
    openForMinutes_ = 0;
  }

  public static final int DURATION_FIELD_NUMBER = 4;
  private io.bokun.inventory.common.api.grpc.Duration duration_;
  /**
   * <pre>
   * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
   */
  @java.lang.Override
  public boolean hasDuration() {
    return duration_ != null;
  }
  /**
   * <pre>
   * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Duration getDuration() {
    return duration_ == null ? io.bokun.inventory.common.api.grpc.Duration.getDefaultInstance() : duration_;
  }
  /**
   * <pre>
   * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
   */
  private void setDuration(io.bokun.inventory.common.api.grpc.Duration value) {
    value.getClass();
  duration_ = value;
    
    }
  /**
   * <pre>
   * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeDuration(io.bokun.inventory.common.api.grpc.Duration value) {
    value.getClass();
  if (duration_ != null &&
        duration_ != io.bokun.inventory.common.api.grpc.Duration.getDefaultInstance()) {
      duration_ =
        io.bokun.inventory.common.api.grpc.Duration.newBuilder(duration_).mergeFrom(value).buildPartial();
    } else {
      duration_ = value;
    }
    
  }
  /**
   * <pre>
   * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
   */
  private void clearDuration() {  duration_ = null;
    
  }

  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval)
      io.bokun.inventory.common.api.grpc.OpeningHoursTimeIntervalOrBuilder {
    // Construct using io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Format: HH:mm
     * </pre>
     *
     * <code>string openFrom = 1;</code>
     * @return The openFrom.
     */
    @java.lang.Override
    public java.lang.String getOpenFrom() {
      return instance.getOpenFrom();
    }
    /**
     * <pre>
     * Format: HH:mm
     * </pre>
     *
     * <code>string openFrom = 1;</code>
     * @return The bytes for openFrom.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOpenFromBytes() {
      return instance.getOpenFromBytes();
    }
    /**
     * <pre>
     * Format: HH:mm
     * </pre>
     *
     * <code>string openFrom = 1;</code>
     * @param value The openFrom to set.
     * @return This builder for chaining.
     */
    public Builder setOpenFrom(
        java.lang.String value) {
      copyOnWrite();
      instance.setOpenFrom(value);
      return this;
    }
    /**
     * <pre>
     * Format: HH:mm
     * </pre>
     *
     * <code>string openFrom = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpenFrom() {
      copyOnWrite();
      instance.clearOpenFrom();
      return this;
    }
    /**
     * <pre>
     * Format: HH:mm
     * </pre>
     *
     * <code>string openFrom = 1;</code>
     * @param value The bytes for openFrom to set.
     * @return This builder for chaining.
     */
    public Builder setOpenFromBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOpenFromBytes(value);
      return this;
    }

    /**
     * <pre>
     * For how many hours open since openFrom
     * </pre>
     *
     * <code>int32 openForHours = 2;</code>
     * @return The openForHours.
     */
    @java.lang.Override
    public int getOpenForHours() {
      return instance.getOpenForHours();
    }
    /**
     * <pre>
     * For how many hours open since openFrom
     * </pre>
     *
     * <code>int32 openForHours = 2;</code>
     * @param value The openForHours to set.
     * @return This builder for chaining.
     */
    public Builder setOpenForHours(int value) {
      copyOnWrite();
      instance.setOpenForHours(value);
      return this;
    }
    /**
     * <pre>
     * For how many hours open since openFrom
     * </pre>
     *
     * <code>int32 openForHours = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpenForHours() {
      copyOnWrite();
      instance.clearOpenForHours();
      return this;
    }

    /**
     * <pre>
     * For how many minutes open since openFrom. Must be within [0..59]
     * </pre>
     *
     * <code>int32 openForMinutes = 3;</code>
     * @return The openForMinutes.
     */
    @java.lang.Override
    public int getOpenForMinutes() {
      return instance.getOpenForMinutes();
    }
    /**
     * <pre>
     * For how many minutes open since openFrom. Must be within [0..59]
     * </pre>
     *
     * <code>int32 openForMinutes = 3;</code>
     * @param value The openForMinutes to set.
     * @return This builder for chaining.
     */
    public Builder setOpenForMinutes(int value) {
      copyOnWrite();
      instance.setOpenForMinutes(value);
      return this;
    }
    /**
     * <pre>
     * For how many minutes open since openFrom. Must be within [0..59]
     * </pre>
     *
     * <code>int32 openForMinutes = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpenForMinutes() {
      copyOnWrite();
      instance.clearOpenForMinutes();
      return this;
    }

    /**
     * <pre>
     * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
     */
    @java.lang.Override
    public boolean hasDuration() {
      return instance.hasDuration();
    }
    /**
     * <pre>
     * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Duration getDuration() {
      return instance.getDuration();
    }
    /**
     * <pre>
     * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
     */
    public Builder setDuration(io.bokun.inventory.common.api.grpc.Duration value) {
      copyOnWrite();
      instance.setDuration(value);
      return this;
      }
    /**
     * <pre>
     * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
     */
    public Builder setDuration(
        io.bokun.inventory.common.api.grpc.Duration.Builder builderForValue) {
      copyOnWrite();
      instance.setDuration(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
     */
    public Builder mergeDuration(io.bokun.inventory.common.api.grpc.Duration value) {
      copyOnWrite();
      instance.mergeDuration(value);
      return this;
    }
    /**
     * <pre>
     * Specifies the frequency between start times within the interval. For example if duration is 20 minutes, the tour starts every 20 minutes.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Duration duration = 4;</code>
     */
    public Builder clearDuration() {  copyOnWrite();
      instance.clearDuration();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "openFrom_",
            "openForHours_",
            "openForMinutes_",
            "duration_",
          };
          java.lang.String info =
              "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\u0004" +
              "\u0003\u0004\u0004\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval)
  private static final io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval DEFAULT_INSTANCE;
  static {
    OpeningHoursTimeInterval defaultInstance = new OpeningHoursTimeInterval();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      OpeningHoursTimeInterval.class, defaultInstance);
  }

  public static io.bokun.inventory.common.api.grpc.OpeningHoursTimeInterval getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<OpeningHoursTimeInterval> PARSER;

  public static com.google.protobuf.Parser<OpeningHoursTimeInterval> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

