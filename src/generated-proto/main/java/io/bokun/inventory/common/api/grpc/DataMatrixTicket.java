// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.bokun.inventory.common.api.grpc;

/**
 * <pre>
 * Data Matrix type: https://en.wikipedia.org/wiki/Data_Matrix
 * </pre>
 *
 * Protobuf type {@code io.bokun.inventory.common.api.grpc.DataMatrixTicket}
 */
public  final class DataMatrixTicket extends
    com.google.protobuf.GeneratedMessageLite<
        DataMatrixTicket, DataMatrixTicket.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.common.api.grpc.DataMatrixTicket)
    DataMatrixTicketOrBuilder {
  private DataMatrixTicket() {
    ticketBarcode_ = "";
    offlineCode_ = "";
  }
  public static final int TICKETBARCODE_FIELD_NUMBER = 1;
  private java.lang.String ticketBarcode_;
  /**
   * <pre>
   * String which is used to generate barcode from. Mandatory.
   * </pre>
   *
   * <code>string ticketBarcode = 1;</code>
   * @return The ticketBarcode.
   */
  @java.lang.Override
  public java.lang.String getTicketBarcode() {
    return ticketBarcode_;
  }
  /**
   * <pre>
   * String which is used to generate barcode from. Mandatory.
   * </pre>
   *
   * <code>string ticketBarcode = 1;</code>
   * @return The bytes for ticketBarcode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTicketBarcodeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(ticketBarcode_);
  }
  /**
   * <pre>
   * String which is used to generate barcode from. Mandatory.
   * </pre>
   *
   * <code>string ticketBarcode = 1;</code>
   * @param value The ticketBarcode to set.
   */
  private void setTicketBarcode(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    ticketBarcode_ = value;
  }
  /**
   * <pre>
   * String which is used to generate barcode from. Mandatory.
   * </pre>
   *
   * <code>string ticketBarcode = 1;</code>
   */
  private void clearTicketBarcode() {
    
    ticketBarcode_ = getDefaultInstance().getTicketBarcode();
  }
  /**
   * <pre>
   * String which is used to generate barcode from. Mandatory.
   * </pre>
   *
   * <code>string ticketBarcode = 1;</code>
   * @param value The bytes for ticketBarcode to set.
   */
  private void setTicketBarcodeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ticketBarcode_ = value.toStringUtf8();
    
  }

  public static final int OFFLINECODE_FIELD_NUMBER = 2;
  private java.lang.String offlineCode_;
  /**
   * <pre>
   * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
   * </pre>
   *
   * <code>string offlineCode = 2;</code>
   * @return The offlineCode.
   */
  @java.lang.Override
  public java.lang.String getOfflineCode() {
    return offlineCode_;
  }
  /**
   * <pre>
   * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
   * </pre>
   *
   * <code>string offlineCode = 2;</code>
   * @return The bytes for offlineCode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOfflineCodeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(offlineCode_);
  }
  /**
   * <pre>
   * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
   * </pre>
   *
   * <code>string offlineCode = 2;</code>
   * @param value The offlineCode to set.
   */
  private void setOfflineCode(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    offlineCode_ = value;
  }
  /**
   * <pre>
   * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
   * </pre>
   *
   * <code>string offlineCode = 2;</code>
   */
  private void clearOfflineCode() {
    
    offlineCode_ = getDefaultInstance().getOfflineCode();
  }
  /**
   * <pre>
   * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
   * </pre>
   *
   * <code>string offlineCode = 2;</code>
   * @param value The bytes for offlineCode to set.
   */
  private void setOfflineCodeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    offlineCode_ = value.toStringUtf8();
    
  }

  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.common.api.grpc.DataMatrixTicket prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Data Matrix type: https://en.wikipedia.org/wiki/Data_Matrix
   * </pre>
   *
   * Protobuf type {@code io.bokun.inventory.common.api.grpc.DataMatrixTicket}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.common.api.grpc.DataMatrixTicket, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.common.api.grpc.DataMatrixTicket)
      io.bokun.inventory.common.api.grpc.DataMatrixTicketOrBuilder {
    // Construct using io.bokun.inventory.common.api.grpc.DataMatrixTicket.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * String which is used to generate barcode from. Mandatory.
     * </pre>
     *
     * <code>string ticketBarcode = 1;</code>
     * @return The ticketBarcode.
     */
    @java.lang.Override
    public java.lang.String getTicketBarcode() {
      return instance.getTicketBarcode();
    }
    /**
     * <pre>
     * String which is used to generate barcode from. Mandatory.
     * </pre>
     *
     * <code>string ticketBarcode = 1;</code>
     * @return The bytes for ticketBarcode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTicketBarcodeBytes() {
      return instance.getTicketBarcodeBytes();
    }
    /**
     * <pre>
     * String which is used to generate barcode from. Mandatory.
     * </pre>
     *
     * <code>string ticketBarcode = 1;</code>
     * @param value The ticketBarcode to set.
     * @return This builder for chaining.
     */
    public Builder setTicketBarcode(
        java.lang.String value) {
      copyOnWrite();
      instance.setTicketBarcode(value);
      return this;
    }
    /**
     * <pre>
     * String which is used to generate barcode from. Mandatory.
     * </pre>
     *
     * <code>string ticketBarcode = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTicketBarcode() {
      copyOnWrite();
      instance.clearTicketBarcode();
      return this;
    }
    /**
     * <pre>
     * String which is used to generate barcode from. Mandatory.
     * </pre>
     *
     * <code>string ticketBarcode = 1;</code>
     * @param value The bytes for ticketBarcode to set.
     * @return This builder for chaining.
     */
    public Builder setTicketBarcodeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTicketBarcodeBytes(value);
      return this;
    }

    /**
     * <pre>
     * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
     * </pre>
     *
     * <code>string offlineCode = 2;</code>
     * @return The offlineCode.
     */
    @java.lang.Override
    public java.lang.String getOfflineCode() {
      return instance.getOfflineCode();
    }
    /**
     * <pre>
     * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
     * </pre>
     *
     * <code>string offlineCode = 2;</code>
     * @return The bytes for offlineCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOfflineCodeBytes() {
      return instance.getOfflineCodeBytes();
    }
    /**
     * <pre>
     * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
     * </pre>
     *
     * <code>string offlineCode = 2;</code>
     * @param value The offlineCode to set.
     * @return This builder for chaining.
     */
    public Builder setOfflineCode(
        java.lang.String value) {
      copyOnWrite();
      instance.setOfflineCode(value);
      return this;
    }
    /**
     * <pre>
     * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
     * </pre>
     *
     * <code>string offlineCode = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOfflineCode() {
      copyOnWrite();
      instance.clearOfflineCode();
      return this;
    }
    /**
     * <pre>
     * String which may be used to verify ticket manually in case if there is no connection for Data Matrix code scanner. Optional.
     * </pre>
     *
     * <code>string offlineCode = 2;</code>
     * @param value The bytes for offlineCode to set.
     * @return This builder for chaining.
     */
    public Builder setOfflineCodeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOfflineCodeBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.common.api.grpc.DataMatrixTicket)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.common.api.grpc.DataMatrixTicket();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "ticketBarcode_",
            "offlineCode_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.common.api.grpc.DataMatrixTicket> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.common.api.grpc.DataMatrixTicket.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.common.api.grpc.DataMatrixTicket>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.common.api.grpc.DataMatrixTicket)
  private static final io.bokun.inventory.common.api.grpc.DataMatrixTicket DEFAULT_INSTANCE;
  static {
    DataMatrixTicket defaultInstance = new DataMatrixTicket();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      DataMatrixTicket.class, defaultInstance);
  }

  public static io.bokun.inventory.common.api.grpc.DataMatrixTicket getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DataMatrixTicket> PARSER;

  public static com.google.protobuf.Parser<DataMatrixTicket> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

