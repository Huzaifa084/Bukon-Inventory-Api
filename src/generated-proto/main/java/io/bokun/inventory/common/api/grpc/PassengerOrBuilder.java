// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.bokun.inventory.common.api.grpc;

public interface PassengerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.bokun.inventory.common.api.grpc.Passenger)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * What kind of pricing category (Adult, Child, etc.) this is booked. Refers to a pricing category in Bokun. Mandatory for both price-per-person
   * and price-per-booking cases.
   * </pre>
   *
   * <code>string pricingCategoryId = 1;</code>
   * @return The pricingCategoryId.
   */
  java.lang.String getPricingCategoryId();
  /**
   * <pre>
   * What kind of pricing category (Adult, Child, etc.) this is booked. Refers to a pricing category in Bokun. Mandatory for both price-per-person
   * and price-per-booking cases.
   * </pre>
   *
   * <code>string pricingCategoryId = 1;</code>
   * @return The bytes for pricingCategoryId.
   */
  com.google.protobuf.ByteString
      getPricingCategoryIdBytes();

  /**
   * <pre>
   * Contact of each passenger. Mandatory. Parts of this object may be enforced via ProductDescription::enforcedTravellerFields.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Contact contact = 2;</code>
   * @return Whether the contact field is set.
   */
  boolean hasContact();
  /**
   * <pre>
   * Contact of each passenger. Mandatory. Parts of this object may be enforced via ProductDescription::enforcedTravellerFields.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Contact contact = 2;</code>
   * @return The contact.
   */
  io.bokun.inventory.common.api.grpc.Contact getContact();

  /**
   * <pre>
   * Should only be set if priced per passenger. If priced per booking then this should be left unassigned.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Price pricePerPassenger = 3;</code>
   * @return Whether the pricePerPassenger field is set.
   */
  boolean hasPricePerPassenger();
  /**
   * <pre>
   * Should only be set if priced per passenger. If priced per booking then this should be left unassigned.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Price pricePerPassenger = 3;</code>
   * @return The pricePerPassenger.
   */
  io.bokun.inventory.common.api.grpc.Price getPricePerPassenger();

  /**
   * <pre>
   * What extras (if any) had been booked by this particular pricing category?
   * a) If extra is booked per person, one of the passengers will refer to all extra bookings for this pricing category.
   * For example: let's say somebody booked 2 Adults + 2 Children + 3 Adult extras (for two Adults) + 2 extras for children (1 extra for each child).
   * The resulting structure will be as follows:
   *   - Adult#1 booking
   *     - Adult extra#1
   *     - Adult extra#2
   *     - Adult extra#3
   *   - Adult#2 booking
   *     - [no extras]
   *   - Child#1 booking
   *     - Child extra #1
   *     - Child extra #2
   *   - Child#2 booking
   *     - [no extras]
   * This is because it is not possible to determine which extra (and how many) goes to which pricing category
   * b) If extra is booked per booking: all extraBookings will be attached to one of pricing categories (without guarantees which in particular).
   * For example: let's say somebody booked 1 Adult + 2 Children + 3 extras.
   * The resulting structure will be as follows:
   *   - Adult booking
   *     - per booking extra#1
   *     - per booking extra#1
   *     - per booking extra#1
   *   - Child#1 booking
   *     - [no extras]
   *   - Child#2 booking
   *     - [no extras]
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.ExtraBooking extraBookings = 4;</code>
   */
  java.util.List<io.bokun.inventory.common.api.grpc.ExtraBooking> 
      getExtraBookingsList();
  /**
   * <pre>
   * What extras (if any) had been booked by this particular pricing category?
   * a) If extra is booked per person, one of the passengers will refer to all extra bookings for this pricing category.
   * For example: let's say somebody booked 2 Adults + 2 Children + 3 Adult extras (for two Adults) + 2 extras for children (1 extra for each child).
   * The resulting structure will be as follows:
   *   - Adult#1 booking
   *     - Adult extra#1
   *     - Adult extra#2
   *     - Adult extra#3
   *   - Adult#2 booking
   *     - [no extras]
   *   - Child#1 booking
   *     - Child extra #1
   *     - Child extra #2
   *   - Child#2 booking
   *     - [no extras]
   * This is because it is not possible to determine which extra (and how many) goes to which pricing category
   * b) If extra is booked per booking: all extraBookings will be attached to one of pricing categories (without guarantees which in particular).
   * For example: let's say somebody booked 1 Adult + 2 Children + 3 extras.
   * The resulting structure will be as follows:
   *   - Adult booking
   *     - per booking extra#1
   *     - per booking extra#1
   *     - per booking extra#1
   *   - Child#1 booking
   *     - [no extras]
   *   - Child#2 booking
   *     - [no extras]
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.ExtraBooking extraBookings = 4;</code>
   */
  io.bokun.inventory.common.api.grpc.ExtraBooking getExtraBookings(int index);
  /**
   * <pre>
   * What extras (if any) had been booked by this particular pricing category?
   * a) If extra is booked per person, one of the passengers will refer to all extra bookings for this pricing category.
   * For example: let's say somebody booked 2 Adults + 2 Children + 3 Adult extras (for two Adults) + 2 extras for children (1 extra for each child).
   * The resulting structure will be as follows:
   *   - Adult#1 booking
   *     - Adult extra#1
   *     - Adult extra#2
   *     - Adult extra#3
   *   - Adult#2 booking
   *     - [no extras]
   *   - Child#1 booking
   *     - Child extra #1
   *     - Child extra #2
   *   - Child#2 booking
   *     - [no extras]
   * This is because it is not possible to determine which extra (and how many) goes to which pricing category
   * b) If extra is booked per booking: all extraBookings will be attached to one of pricing categories (without guarantees which in particular).
   * For example: let's say somebody booked 1 Adult + 2 Children + 3 extras.
   * The resulting structure will be as follows:
   *   - Adult booking
   *     - per booking extra#1
   *     - per booking extra#1
   *     - per booking extra#1
   *   - Child#1 booking
   *     - [no extras]
   *   - Child#2 booking
   *     - [no extras]
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.ExtraBooking extraBookings = 4;</code>
   */
  int getExtraBookingsCount();
}
