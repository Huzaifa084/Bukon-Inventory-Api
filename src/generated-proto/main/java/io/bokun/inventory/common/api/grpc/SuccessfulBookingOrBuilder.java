// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.bokun.inventory.common.api.grpc;

public interface SuccessfulBookingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.bokun.inventory.common.api.grpc.SuccessfulBooking)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
   * Either case, mandatory.
   * </pre>
   *
   * <code>string bookingConfirmationCode = 1;</code>
   * @return The bookingConfirmationCode.
   */
  java.lang.String getBookingConfirmationCode();
  /**
   * <pre>
   * This may or may not overlap with ReservationResponse::reservationConfirmationCode, depending on the specifics of the remote plugin.
   * Either case, mandatory.
   * </pre>
   *
   * <code>string bookingConfirmationCode = 1;</code>
   * @return The bytes for bookingConfirmationCode.
   */
  com.google.protobuf.ByteString
      getBookingConfirmationCodeBytes();

  /**
   * <pre>
   * Set if tickets were requested per passenger (yet delivered per pricing category).
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
   * @return Whether the ticketsPerPassenger field is set.
   */
  boolean hasTicketsPerPassenger();
  /**
   * <pre>
   * Set if tickets were requested per passenger (yet delivered per pricing category).
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory ticketsPerPassenger = 2;</code>
   * @return The ticketsPerPassenger.
   */
  io.bokun.inventory.common.api.grpc.TicketsPerPricingCategory getTicketsPerPassenger();

  /**
   * <pre>
   * Set if a single ticket-per-booking was requested.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
   * @return Whether the bookingTicket field is set.
   */
  boolean hasBookingTicket();
  /**
   * <pre>
   * Set if a single ticket-per-booking was requested.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Ticket bookingTicket = 3;</code>
   * @return The bookingTicket.
   */
  io.bokun.inventory.common.api.grpc.Ticket getBookingTicket();

  public io.bokun.inventory.common.api.grpc.SuccessfulBooking.TicketsCase getTicketsCase();
}
