// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.bokun.inventory.common.api.grpc;

/**
 * Protobuf type {@code io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse}
 */
public  final class ProductAvailabilityWithRatesResponse extends
    com.google.protobuf.GeneratedMessageLite<
        ProductAvailabilityWithRatesResponse, ProductAvailabilityWithRatesResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse)
    ProductAvailabilityWithRatesResponseOrBuilder {
  private ProductAvailabilityWithRatesResponse() {
    rates_ = emptyProtobufList();
  }
  public static final int CAPACITY_FIELD_NUMBER = 1;
  private int capacity_;
  /**
   * <pre>
   * How many slots are available for this day/time. Mandatory.
   * </pre>
   *
   * <code>int32 capacity = 1;</code>
   * @return The capacity.
   */
  @java.lang.Override
  public int getCapacity() {
    return capacity_;
  }
  /**
   * <pre>
   * How many slots are available for this day/time. Mandatory.
   * </pre>
   *
   * <code>int32 capacity = 1;</code>
   * @param value The capacity to set.
   */
  private void setCapacity(int value) {
    
    capacity_ = value;
  }
  /**
   * <pre>
   * How many slots are available for this day/time. Mandatory.
   * </pre>
   *
   * <code>int32 capacity = 1;</code>
   */
  private void clearCapacity() {
    
    capacity_ = 0;
  }

  public static final int DATE_FIELD_NUMBER = 2;
  private io.bokun.inventory.common.api.grpc.Date date_;
  /**
   * <pre>
   * Date for when this product is available. Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
   */
  @java.lang.Override
  public boolean hasDate() {
    return date_ != null;
  }
  /**
   * <pre>
   * Date for when this product is available. Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Date getDate() {
    return date_ == null ? io.bokun.inventory.common.api.grpc.Date.getDefaultInstance() : date_;
  }
  /**
   * <pre>
   * Date for when this product is available. Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
   */
  private void setDate(io.bokun.inventory.common.api.grpc.Date value) {
    value.getClass();
  date_ = value;
    
    }
  /**
   * <pre>
   * Date for when this product is available. Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeDate(io.bokun.inventory.common.api.grpc.Date value) {
    value.getClass();
  if (date_ != null &&
        date_ != io.bokun.inventory.common.api.grpc.Date.getDefaultInstance()) {
      date_ =
        io.bokun.inventory.common.api.grpc.Date.newBuilder(date_).mergeFrom(value).buildPartial();
    } else {
      date_ = value;
    }
    
  }
  /**
   * <pre>
   * Date for when this product is available. Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
   */
  private void clearDate() {  date_ = null;
    
  }

  public static final int TIME_FIELD_NUMBER = 3;
  private io.bokun.inventory.common.api.grpc.Time time_;
  /**
   * <pre>
   * When does this event start? Unset if this product does not support times.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
   */
  @java.lang.Override
  public boolean hasTime() {
    return time_ != null;
  }
  /**
   * <pre>
   * When does this event start? Unset if this product does not support times.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Time getTime() {
    return time_ == null ? io.bokun.inventory.common.api.grpc.Time.getDefaultInstance() : time_;
  }
  /**
   * <pre>
   * When does this event start? Unset if this product does not support times.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
   */
  private void setTime(io.bokun.inventory.common.api.grpc.Time value) {
    value.getClass();
  time_ = value;
    
    }
  /**
   * <pre>
   * When does this event start? Unset if this product does not support times.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeTime(io.bokun.inventory.common.api.grpc.Time value) {
    value.getClass();
  if (time_ != null &&
        time_ != io.bokun.inventory.common.api.grpc.Time.getDefaultInstance()) {
      time_ =
        io.bokun.inventory.common.api.grpc.Time.newBuilder(time_).mergeFrom(value).buildPartial();
    } else {
      time_ = value;
    }
    
  }
  /**
   * <pre>
   * When does this event start? Unset if this product does not support times.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
   */
  private void clearTime() {  time_ = null;
    
  }

  public static final int PICKUPTIME_FIELD_NUMBER = 4;
  private io.bokun.inventory.common.api.grpc.Time pickupTime_;
  /**
   * <pre>
   * When does a pickup for this product start? Unset if this product does not support times or pickups.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
   */
  @java.lang.Override
  public boolean hasPickupTime() {
    return pickupTime_ != null;
  }
  /**
   * <pre>
   * When does a pickup for this product start? Unset if this product does not support times or pickups.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Time getPickupTime() {
    return pickupTime_ == null ? io.bokun.inventory.common.api.grpc.Time.getDefaultInstance() : pickupTime_;
  }
  /**
   * <pre>
   * When does a pickup for this product start? Unset if this product does not support times or pickups.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
   */
  private void setPickupTime(io.bokun.inventory.common.api.grpc.Time value) {
    value.getClass();
  pickupTime_ = value;
    
    }
  /**
   * <pre>
   * When does a pickup for this product start? Unset if this product does not support times or pickups.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePickupTime(io.bokun.inventory.common.api.grpc.Time value) {
    value.getClass();
  if (pickupTime_ != null &&
        pickupTime_ != io.bokun.inventory.common.api.grpc.Time.getDefaultInstance()) {
      pickupTime_ =
        io.bokun.inventory.common.api.grpc.Time.newBuilder(pickupTime_).mergeFrom(value).buildPartial();
    } else {
      pickupTime_ = value;
    }
    
  }
  /**
   * <pre>
   * When does a pickup for this product start? Unset if this product does not support times or pickups.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
   */
  private void clearPickupTime() {  pickupTime_ = null;
    
  }

  public static final int RATES_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.ProtobufList<io.bokun.inventory.common.api.grpc.RateWithPrice> rates_;
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  @java.lang.Override
  public java.util.List<io.bokun.inventory.common.api.grpc.RateWithPrice> getRatesList() {
    return rates_;
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  public java.util.List<? extends io.bokun.inventory.common.api.grpc.RateWithPriceOrBuilder> 
      getRatesOrBuilderList() {
    return rates_;
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  @java.lang.Override
  public int getRatesCount() {
    return rates_.size();
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.RateWithPrice getRates(int index) {
    return rates_.get(index);
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  public io.bokun.inventory.common.api.grpc.RateWithPriceOrBuilder getRatesOrBuilder(
      int index) {
    return rates_.get(index);
  }
  private void ensureRatesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<io.bokun.inventory.common.api.grpc.RateWithPrice> tmp = rates_;
    if (!tmp.isModifiable()) {
      rates_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  private void setRates(
      int index, io.bokun.inventory.common.api.grpc.RateWithPrice value) {
    value.getClass();
  ensureRatesIsMutable();
    rates_.set(index, value);
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  private void addRates(io.bokun.inventory.common.api.grpc.RateWithPrice value) {
    value.getClass();
  ensureRatesIsMutable();
    rates_.add(value);
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  private void addRates(
      int index, io.bokun.inventory.common.api.grpc.RateWithPrice value) {
    value.getClass();
  ensureRatesIsMutable();
    rates_.add(index, value);
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  private void addAllRates(
      java.lang.Iterable<? extends io.bokun.inventory.common.api.grpc.RateWithPrice> values) {
    ensureRatesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, rates_);
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  private void clearRates() {
    rates_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Rates with prices. Mandatory (should at least have one entry).
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
   */
  private void removeRates(int index) {
    ensureRatesIsMutable();
    rates_.remove(index);
  }

  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse)
      io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponseOrBuilder {
    // Construct using io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * How many slots are available for this day/time. Mandatory.
     * </pre>
     *
     * <code>int32 capacity = 1;</code>
     * @return The capacity.
     */
    @java.lang.Override
    public int getCapacity() {
      return instance.getCapacity();
    }
    /**
     * <pre>
     * How many slots are available for this day/time. Mandatory.
     * </pre>
     *
     * <code>int32 capacity = 1;</code>
     * @param value The capacity to set.
     * @return This builder for chaining.
     */
    public Builder setCapacity(int value) {
      copyOnWrite();
      instance.setCapacity(value);
      return this;
    }
    /**
     * <pre>
     * How many slots are available for this day/time. Mandatory.
     * </pre>
     *
     * <code>int32 capacity = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCapacity() {
      copyOnWrite();
      instance.clearCapacity();
      return this;
    }

    /**
     * <pre>
     * Date for when this product is available. Mandatory.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
     */
    @java.lang.Override
    public boolean hasDate() {
      return instance.hasDate();
    }
    /**
     * <pre>
     * Date for when this product is available. Mandatory.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Date getDate() {
      return instance.getDate();
    }
    /**
     * <pre>
     * Date for when this product is available. Mandatory.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
     */
    public Builder setDate(io.bokun.inventory.common.api.grpc.Date value) {
      copyOnWrite();
      instance.setDate(value);
      return this;
      }
    /**
     * <pre>
     * Date for when this product is available. Mandatory.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
     */
    public Builder setDate(
        io.bokun.inventory.common.api.grpc.Date.Builder builderForValue) {
      copyOnWrite();
      instance.setDate(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Date for when this product is available. Mandatory.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
     */
    public Builder mergeDate(io.bokun.inventory.common.api.grpc.Date value) {
      copyOnWrite();
      instance.mergeDate(value);
      return this;
    }
    /**
     * <pre>
     * Date for when this product is available. Mandatory.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 2;</code>
     */
    public Builder clearDate() {  copyOnWrite();
      instance.clearDate();
      return this;
    }

    /**
     * <pre>
     * When does this event start? Unset if this product does not support times.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
     */
    @java.lang.Override
    public boolean hasTime() {
      return instance.hasTime();
    }
    /**
     * <pre>
     * When does this event start? Unset if this product does not support times.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Time getTime() {
      return instance.getTime();
    }
    /**
     * <pre>
     * When does this event start? Unset if this product does not support times.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
     */
    public Builder setTime(io.bokun.inventory.common.api.grpc.Time value) {
      copyOnWrite();
      instance.setTime(value);
      return this;
      }
    /**
     * <pre>
     * When does this event start? Unset if this product does not support times.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
     */
    public Builder setTime(
        io.bokun.inventory.common.api.grpc.Time.Builder builderForValue) {
      copyOnWrite();
      instance.setTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * When does this event start? Unset if this product does not support times.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
     */
    public Builder mergeTime(io.bokun.inventory.common.api.grpc.Time value) {
      copyOnWrite();
      instance.mergeTime(value);
      return this;
    }
    /**
     * <pre>
     * When does this event start? Unset if this product does not support times.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 3;</code>
     */
    public Builder clearTime() {  copyOnWrite();
      instance.clearTime();
      return this;
    }

    /**
     * <pre>
     * When does a pickup for this product start? Unset if this product does not support times or pickups.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
     */
    @java.lang.Override
    public boolean hasPickupTime() {
      return instance.hasPickupTime();
    }
    /**
     * <pre>
     * When does a pickup for this product start? Unset if this product does not support times or pickups.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Time getPickupTime() {
      return instance.getPickupTime();
    }
    /**
     * <pre>
     * When does a pickup for this product start? Unset if this product does not support times or pickups.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
     */
    public Builder setPickupTime(io.bokun.inventory.common.api.grpc.Time value) {
      copyOnWrite();
      instance.setPickupTime(value);
      return this;
      }
    /**
     * <pre>
     * When does a pickup for this product start? Unset if this product does not support times or pickups.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
     */
    public Builder setPickupTime(
        io.bokun.inventory.common.api.grpc.Time.Builder builderForValue) {
      copyOnWrite();
      instance.setPickupTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * When does a pickup for this product start? Unset if this product does not support times or pickups.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
     */
    public Builder mergePickupTime(io.bokun.inventory.common.api.grpc.Time value) {
      copyOnWrite();
      instance.mergePickupTime(value);
      return this;
    }
    /**
     * <pre>
     * When does a pickup for this product start? Unset if this product does not support times or pickups.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time pickupTime = 4;</code>
     */
    public Builder clearPickupTime() {  copyOnWrite();
      instance.clearPickupTime();
      return this;
    }

    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    @java.lang.Override
    public java.util.List<io.bokun.inventory.common.api.grpc.RateWithPrice> getRatesList() {
      return java.util.Collections.unmodifiableList(
          instance.getRatesList());
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    @java.lang.Override
    public int getRatesCount() {
      return instance.getRatesCount();
    }/**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.RateWithPrice getRates(int index) {
      return instance.getRates(index);
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder setRates(
        int index, io.bokun.inventory.common.api.grpc.RateWithPrice value) {
      copyOnWrite();
      instance.setRates(index, value);
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder setRates(
        int index, io.bokun.inventory.common.api.grpc.RateWithPrice.Builder builderForValue) {
      copyOnWrite();
      instance.setRates(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder addRates(io.bokun.inventory.common.api.grpc.RateWithPrice value) {
      copyOnWrite();
      instance.addRates(value);
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder addRates(
        int index, io.bokun.inventory.common.api.grpc.RateWithPrice value) {
      copyOnWrite();
      instance.addRates(index, value);
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder addRates(
        io.bokun.inventory.common.api.grpc.RateWithPrice.Builder builderForValue) {
      copyOnWrite();
      instance.addRates(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder addRates(
        int index, io.bokun.inventory.common.api.grpc.RateWithPrice.Builder builderForValue) {
      copyOnWrite();
      instance.addRates(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder addAllRates(
        java.lang.Iterable<? extends io.bokun.inventory.common.api.grpc.RateWithPrice> values) {
      copyOnWrite();
      instance.addAllRates(values);
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder clearRates() {
      copyOnWrite();
      instance.clearRates();
      return this;
    }
    /**
     * <pre>
     * Rates with prices. Mandatory (should at least have one entry).
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.RateWithPrice rates = 5;</code>
     */
    public Builder removeRates(int index) {
      copyOnWrite();
      instance.removeRates(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "capacity_",
            "date_",
            "time_",
            "pickupTime_",
            "rates_",
            io.bokun.inventory.common.api.grpc.RateWithPrice.class,
          };
          java.lang.String info =
              "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0001\u0000\u0001\u0004\u0002\t" +
              "\u0003\t\u0004\t\u0005\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse)
  private static final io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse DEFAULT_INSTANCE;
  static {
    ProductAvailabilityWithRatesResponse defaultInstance = new ProductAvailabilityWithRatesResponse();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ProductAvailabilityWithRatesResponse.class, defaultInstance);
  }

  public static io.bokun.inventory.common.api.grpc.ProductAvailabilityWithRatesResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ProductAvailabilityWithRatesResponse> PARSER;

  public static com.google.protobuf.Parser<ProductAvailabilityWithRatesResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

