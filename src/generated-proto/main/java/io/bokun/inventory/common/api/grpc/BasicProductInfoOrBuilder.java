// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.bokun.inventory.common.api.grpc;

public interface BasicProductInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.bokun.inventory.common.api.grpc.BasicProductInfo)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Product id of remote system. Mandatory.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * Product id of remote system. Mandatory.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Product name of remote system. Mandatory.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Product name of remote system. Mandatory.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Product description of remote system. Optional.
   * </pre>
   *
   * <code>string description = 3;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Product description of remote system. Optional.
   * </pre>
   *
   * <code>string description = 3;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Product categories this product is sold at. Optional - they will be shown for information purposes if set.
   * This refers to pricing categories of the remote system.
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PricingCategory pricingCategories = 4;</code>
   */
  java.util.List<io.bokun.inventory.common.api.grpc.PricingCategory> 
      getPricingCategoriesList();
  /**
   * <pre>
   * Product categories this product is sold at. Optional - they will be shown for information purposes if set.
   * This refers to pricing categories of the remote system.
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PricingCategory pricingCategories = 4;</code>
   */
  io.bokun.inventory.common.api.grpc.PricingCategory getPricingCategories(int index);
  /**
   * <pre>
   * Product categories this product is sold at. Optional - they will be shown for information purposes if set.
   * This refers to pricing categories of the remote system.
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.PricingCategory pricingCategories = 4;</code>
   */
  int getPricingCategoriesCount();

  /**
   * <pre>
   * City name where this product is served at. Optional (if product is not applicable to any city, e.g. Lava Tours).
   * Multiple items means this product is for multiple cities.
   * </pre>
   *
   * <code>repeated string cities = 5;</code>
   * @return A list containing the cities.
   */
  java.util.List<java.lang.String>
      getCitiesList();
  /**
   * <pre>
   * City name where this product is served at. Optional (if product is not applicable to any city, e.g. Lava Tours).
   * Multiple items means this product is for multiple cities.
   * </pre>
   *
   * <code>repeated string cities = 5;</code>
   * @return The count of cities.
   */
  int getCitiesCount();
  /**
   * <pre>
   * City name where this product is served at. Optional (if product is not applicable to any city, e.g. Lava Tours).
   * Multiple items means this product is for multiple cities.
   * </pre>
   *
   * <code>repeated string cities = 5;</code>
   * @param index The index of the element to return.
   * @return The cities at the given index.
   */
  java.lang.String getCities(int index);
  /**
   * <pre>
   * City name where this product is served at. Optional (if product is not applicable to any city, e.g. Lava Tours).
   * Multiple items means this product is for multiple cities.
   * </pre>
   *
   * <code>repeated string cities = 5;</code>
   * @param index The index of the element to return.
   * @return The cities at the given index.
   */
  com.google.protobuf.ByteString
      getCitiesBytes(int index);

  /**
   * <pre>
   * ISO ALPHA-2 codes. Optional (inventory service may not set any country if plugin returns invalid data).
   * Multiple items means this product is for multiple countries.
   * </pre>
   *
   * <code>repeated string countries = 6;</code>
   * @return A list containing the countries.
   */
  java.util.List<java.lang.String>
      getCountriesList();
  /**
   * <pre>
   * ISO ALPHA-2 codes. Optional (inventory service may not set any country if plugin returns invalid data).
   * Multiple items means this product is for multiple countries.
   * </pre>
   *
   * <code>repeated string countries = 6;</code>
   * @return The count of countries.
   */
  int getCountriesCount();
  /**
   * <pre>
   * ISO ALPHA-2 codes. Optional (inventory service may not set any country if plugin returns invalid data).
   * Multiple items means this product is for multiple countries.
   * </pre>
   *
   * <code>repeated string countries = 6;</code>
   * @param index The index of the element to return.
   * @return The countries at the given index.
   */
  java.lang.String getCountries(int index);
  /**
   * <pre>
   * ISO ALPHA-2 codes. Optional (inventory service may not set any country if plugin returns invalid data).
   * Multiple items means this product is for multiple countries.
   * </pre>
   *
   * <code>repeated string countries = 6;</code>
   * @param index The index of the element to return.
   * @return The countries at the given index.
   */
  com.google.protobuf.ByteString
      getCountriesBytes(int index);
}
