// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking_service.proto

package io.bokun.inventory.service.booking.grpc;

public interface ConfirmBookingRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.bokun.inventory.service.booking.grpc.ConfirmBookingRequest)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * product, *exactly* as used with CreateReservation request. Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.common.grpc.BokunProduct bokunProduct = 1;</code>
   * @return Whether the bokunProduct field is set.
   */
  boolean hasBokunProduct();
  /**
   * <pre>
   * product, *exactly* as used with CreateReservation request. Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.common.grpc.BokunProduct bokunProduct = 1;</code>
   * @return The bokunProduct.
   */
  io.bokun.inventory.service.common.grpc.BokunProduct getBokunProduct();

  /**
   * <pre>
   * Exactly as returned by io.bokun.inventory.common.api.grpc.SuccessfulReservation::reservationConfirmationCode. Mandatory.
   * </pre>
   *
   * <code>string reservationConfirmationCode = 2;</code>
   * @return The reservationConfirmationCode.
   */
  java.lang.String getReservationConfirmationCode();
  /**
   * <pre>
   * Exactly as returned by io.bokun.inventory.common.api.grpc.SuccessfulReservation::reservationConfirmationCode. Mandatory.
   * </pre>
   *
   * <code>string reservationConfirmationCode = 2;</code>
   * @return The bytes for reservationConfirmationCode.
   */
  com.google.protobuf.ByteString
      getReservationConfirmationCodeBytes();

  /**
   * <pre>
   * What kind of tickets do you want the remote end to generate? This must be supported by a booked product, see ProductDescription::ticketSupport
   * Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketSupport ticketingType = 3;</code>
   * @return The enum numeric value on the wire for ticketingType.
   */
  int getTicketingTypeValue();
  /**
   * <pre>
   * What kind of tickets do you want the remote end to generate? This must be supported by a booked product, see ProductDescription::ticketSupport
   * Mandatory.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.TicketSupport ticketingType = 3;</code>
   * @return The ticketingType.
   */
  io.bokun.inventory.common.api.grpc.TicketSupport getTicketingType();

  /**
   * <pre>
   * Reservation data, exactly as specified in reservation step, except contacts (both for leading passenger as well as other travellers which
   * may change). Supplied for convenience where 3rd party APIs might require different items at different stages.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.booking.grpc.ReservationData reservationData = 4;</code>
   * @return Whether the reservationData field is set.
   */
  boolean hasReservationData();
  /**
   * <pre>
   * Reservation data, exactly as specified in reservation step, except contacts (both for leading passenger as well as other travellers which
   * may change). Supplied for convenience where 3rd party APIs might require different items at different stages.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.booking.grpc.ReservationData reservationData = 4;</code>
   * @return The reservationData.
   */
  io.bokun.inventory.service.booking.grpc.ReservationData getReservationData();
}
