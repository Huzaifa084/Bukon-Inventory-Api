// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking_service.proto

package io.bokun.inventory.service.booking.grpc;

/**
 * Protobuf type {@code io.bokun.inventory.service.booking.grpc.ReservationData}
 */
public  final class ReservationData extends
    com.google.protobuf.GeneratedMessageLite<
        ReservationData, ReservationData.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.service.booking.grpc.ReservationData)
    ReservationDataOrBuilder {
  private ReservationData() {
    notes_ = "";
    reservations_ = emptyProtobufList();
    platformId_ = "";
    externalSaleId_ = "";
    agentCode_ = "";
    platformBookingId_ = "";
  }
  private int pickupPlaceCase_ = 0;
  private java.lang.Object pickupPlace_;
  public enum PickupPlaceCase {
    CUSTOMPICKUPPLACE(6),
    PREDEFINEDPICKUPPLACE(7),
    PICKUPPLACE_NOT_SET(0);
    private final int value;
    private PickupPlaceCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PickupPlaceCase valueOf(int value) {
      return forNumber(value);
    }

    public static PickupPlaceCase forNumber(int value) {
      switch (value) {
        case 6: return CUSTOMPICKUPPLACE;
        case 7: return PREDEFINEDPICKUPPLACE;
        case 0: return PICKUPPLACE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public PickupPlaceCase
  getPickupPlaceCase() {
    return PickupPlaceCase.forNumber(
        pickupPlaceCase_);
  }

  private void clearPickupPlace() {
    pickupPlaceCase_ = 0;
    pickupPlace_ = null;
  }

  private int dropoffPlaceCase_ = 0;
  private java.lang.Object dropoffPlace_;
  public enum DropoffPlaceCase {
    CUSTOMDROPOFFPLACE(9),
    PREDEFINEDDROPOFFPLACE(10),
    DROPOFFPLACE_NOT_SET(0);
    private final int value;
    private DropoffPlaceCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DropoffPlaceCase valueOf(int value) {
      return forNumber(value);
    }

    public static DropoffPlaceCase forNumber(int value) {
      switch (value) {
        case 9: return CUSTOMDROPOFFPLACE;
        case 10: return PREDEFINEDDROPOFFPLACE;
        case 0: return DROPOFFPLACE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public DropoffPlaceCase
  getDropoffPlaceCase() {
    return DropoffPlaceCase.forNumber(
        dropoffPlaceCase_);
  }

  private void clearDropoffPlace() {
    dropoffPlaceCase_ = 0;
    dropoffPlace_ = null;
  }

  public static final int CUSTOMERCONTACT_FIELD_NUMBER = 1;
  private io.bokun.inventory.common.api.grpc.Contact customerContact_;
  /**
   * <pre>
   * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
   */
  @java.lang.Override
  public boolean hasCustomerContact() {
    return customerContact_ != null;
  }
  /**
   * <pre>
   * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Contact getCustomerContact() {
    return customerContact_ == null ? io.bokun.inventory.common.api.grpc.Contact.getDefaultInstance() : customerContact_;
  }
  /**
   * <pre>
   * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
   */
  private void setCustomerContact(io.bokun.inventory.common.api.grpc.Contact value) {
    value.getClass();
  customerContact_ = value;
    
    }
  /**
   * <pre>
   * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCustomerContact(io.bokun.inventory.common.api.grpc.Contact value) {
    value.getClass();
  if (customerContact_ != null &&
        customerContact_ != io.bokun.inventory.common.api.grpc.Contact.getDefaultInstance()) {
      customerContact_ =
        io.bokun.inventory.common.api.grpc.Contact.newBuilder(customerContact_).mergeFrom(value).buildPartial();
    } else {
      customerContact_ = value;
    }
    
  }
  /**
   * <pre>
   * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
   */
  private void clearCustomerContact() {  customerContact_ = null;
    
  }

  public static final int NOTES_FIELD_NUMBER = 2;
  private java.lang.String notes_;
  /**
   * <pre>
   * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
   * </pre>
   *
   * <code>string notes = 2;</code>
   * @return The notes.
   */
  @java.lang.Override
  public java.lang.String getNotes() {
    return notes_;
  }
  /**
   * <pre>
   * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
   * </pre>
   *
   * <code>string notes = 2;</code>
   * @return The bytes for notes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNotesBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(notes_);
  }
  /**
   * <pre>
   * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
   * </pre>
   *
   * <code>string notes = 2;</code>
   * @param value The notes to set.
   */
  private void setNotes(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    notes_ = value;
  }
  /**
   * <pre>
   * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
   * </pre>
   *
   * <code>string notes = 2;</code>
   */
  private void clearNotes() {
    
    notes_ = getDefaultInstance().getNotes();
  }
  /**
   * <pre>
   * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
   * </pre>
   *
   * <code>string notes = 2;</code>
   * @param value The bytes for notes to set.
   */
  private void setNotesBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    notes_ = value.toStringUtf8();
    
  }

  public static final int DATE_FIELD_NUMBER = 3;
  private io.bokun.inventory.common.api.grpc.Date date_;
  /**
   * <pre>
   * Day of the event should take place. Mandatory for all but PASS type activities.
   * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
   */
  @java.lang.Override
  public boolean hasDate() {
    return date_ != null;
  }
  /**
   * <pre>
   * Day of the event should take place. Mandatory for all but PASS type activities.
   * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Date getDate() {
    return date_ == null ? io.bokun.inventory.common.api.grpc.Date.getDefaultInstance() : date_;
  }
  /**
   * <pre>
   * Day of the event should take place. Mandatory for all but PASS type activities.
   * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
   */
  private void setDate(io.bokun.inventory.common.api.grpc.Date value) {
    value.getClass();
  date_ = value;
    
    }
  /**
   * <pre>
   * Day of the event should take place. Mandatory for all but PASS type activities.
   * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeDate(io.bokun.inventory.common.api.grpc.Date value) {
    value.getClass();
  if (date_ != null &&
        date_ != io.bokun.inventory.common.api.grpc.Date.getDefaultInstance()) {
      date_ =
        io.bokun.inventory.common.api.grpc.Date.newBuilder(date_).mergeFrom(value).buildPartial();
    } else {
      date_ = value;
    }
    
  }
  /**
   * <pre>
   * Day of the event should take place. Mandatory for all but PASS type activities.
   * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
   */
  private void clearDate() {  date_ = null;
    
  }

  public static final int TIME_FIELD_NUMBER = 4;
  private io.bokun.inventory.common.api.grpc.Time time_;
  /**
   * <pre>
   * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
   * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
   */
  @java.lang.Override
  public boolean hasTime() {
    return time_ != null;
  }
  /**
   * <pre>
   * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
   * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Time getTime() {
    return time_ == null ? io.bokun.inventory.common.api.grpc.Time.getDefaultInstance() : time_;
  }
  /**
   * <pre>
   * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
   * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
   */
  private void setTime(io.bokun.inventory.common.api.grpc.Time value) {
    value.getClass();
  time_ = value;
    
    }
  /**
   * <pre>
   * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
   * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeTime(io.bokun.inventory.common.api.grpc.Time value) {
    value.getClass();
  if (time_ != null &&
        time_ != io.bokun.inventory.common.api.grpc.Time.getDefaultInstance()) {
      time_ =
        io.bokun.inventory.common.api.grpc.Time.newBuilder(time_).mergeFrom(value).buildPartial();
    } else {
      time_ = value;
    }
    
  }
  /**
   * <pre>
   * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
   * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
   */
  private void clearTime() {  time_ = null;
    
  }

  public static final int PICKUPREQUIRED_FIELD_NUMBER = 5;
  private boolean pickupRequired_;
  /**
   * <pre>
   * Whether pickup is required. Only relevant if ProductDescription::pickupAvailable of booked product is true.
   * </pre>
   *
   * <code>bool pickupRequired = 5;</code>
   * @return The pickupRequired.
   */
  @java.lang.Override
  public boolean getPickupRequired() {
    return pickupRequired_;
  }
  /**
   * <pre>
   * Whether pickup is required. Only relevant if ProductDescription::pickupAvailable of booked product is true.
   * </pre>
   *
   * <code>bool pickupRequired = 5;</code>
   * @param value The pickupRequired to set.
   */
  private void setPickupRequired(boolean value) {
    
    pickupRequired_ = value;
  }
  /**
   * <pre>
   * Whether pickup is required. Only relevant if ProductDescription::pickupAvailable of booked product is true.
   * </pre>
   *
   * <code>bool pickupRequired = 5;</code>
   */
  private void clearPickupRequired() {
    
    pickupRequired_ = false;
  }

  public static final int CUSTOMPICKUPPLACE_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customPickupPlace = 6;</code>
   * @return Whether the customPickupPlace field is set.
   */
  @java.lang.Override
  public boolean hasCustomPickupPlace() {
    return pickupPlaceCase_ == 6;
  }
  /**
   * <pre>
   * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customPickupPlace = 6;</code>
   * @return The customPickupPlace.
   */
  @java.lang.Override
  public java.lang.String getCustomPickupPlace() {
    java.lang.String ref = "";
    if (pickupPlaceCase_ == 6) {
      ref = (java.lang.String) pickupPlace_;
    }
    return ref;
  }
  /**
   * <pre>
   * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customPickupPlace = 6;</code>
   * @return The bytes for customPickupPlace.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCustomPickupPlaceBytes() {
    java.lang.String ref = "";
    if (pickupPlaceCase_ == 6) {
      ref = (java.lang.String) pickupPlace_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customPickupPlace = 6;</code>
   * @param value The customPickupPlace to set.
   */
  private void setCustomPickupPlace(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  pickupPlaceCase_ = 6;
    pickupPlace_ = value;
  }
  /**
   * <pre>
   * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customPickupPlace = 6;</code>
   */
  private void clearCustomPickupPlace() {
    if (pickupPlaceCase_ == 6) {
      pickupPlaceCase_ = 0;
      pickupPlace_ = null;
    }
  }
  /**
   * <pre>
   * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customPickupPlace = 6;</code>
   * @param value The bytes for customPickupPlace to set.
   */
  private void setCustomPickupPlaceBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    pickupPlace_ = value.toStringUtf8();
    pickupPlaceCase_ = 6;
  }

  public static final int PREDEFINEDPICKUPPLACE_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
   * Should match location from ProductDescription::pickupPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
   */
  @java.lang.Override
  public boolean hasPredefinedPickupPlace() {
    return pickupPlaceCase_ == 7;
  }
  /**
   * <pre>
   * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
   * Should match location from ProductDescription::pickupPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.PickupDropoffPlace getPredefinedPickupPlace() {
    if (pickupPlaceCase_ == 7) {
       return (io.bokun.inventory.common.api.grpc.PickupDropoffPlace) pickupPlace_;
    }
    return io.bokun.inventory.common.api.grpc.PickupDropoffPlace.getDefaultInstance();
  }
  /**
   * <pre>
   * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
   * Should match location from ProductDescription::pickupPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
   */
  private void setPredefinedPickupPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
    value.getClass();
  pickupPlace_ = value;
    pickupPlaceCase_ = 7;
  }
  /**
   * <pre>
   * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
   * Should match location from ProductDescription::pickupPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
   */
  private void mergePredefinedPickupPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
    value.getClass();
  if (pickupPlaceCase_ == 7 &&
        pickupPlace_ != io.bokun.inventory.common.api.grpc.PickupDropoffPlace.getDefaultInstance()) {
      pickupPlace_ = io.bokun.inventory.common.api.grpc.PickupDropoffPlace.newBuilder((io.bokun.inventory.common.api.grpc.PickupDropoffPlace) pickupPlace_)
          .mergeFrom(value).buildPartial();
    } else {
      pickupPlace_ = value;
    }
    pickupPlaceCase_ = 7;
  }
  /**
   * <pre>
   * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
   * Should match location from ProductDescription::pickupPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
   */
  private void clearPredefinedPickupPlace() {
    if (pickupPlaceCase_ == 7) {
      pickupPlaceCase_ = 0;
      pickupPlace_ = null;
    }
  }

  public static final int DROPOFFREQUIRED_FIELD_NUMBER = 8;
  private boolean dropoffRequired_;
  /**
   * <pre>
   * Whether drop off is required. Only relevant if ProductDescription::dropoffAvailable of booked product is true.
   * </pre>
   *
   * <code>bool dropoffRequired = 8;</code>
   * @return The dropoffRequired.
   */
  @java.lang.Override
  public boolean getDropoffRequired() {
    return dropoffRequired_;
  }
  /**
   * <pre>
   * Whether drop off is required. Only relevant if ProductDescription::dropoffAvailable of booked product is true.
   * </pre>
   *
   * <code>bool dropoffRequired = 8;</code>
   * @param value The dropoffRequired to set.
   */
  private void setDropoffRequired(boolean value) {
    
    dropoffRequired_ = value;
  }
  /**
   * <pre>
   * Whether drop off is required. Only relevant if ProductDescription::dropoffAvailable of booked product is true.
   * </pre>
   *
   * <code>bool dropoffRequired = 8;</code>
   */
  private void clearDropoffRequired() {
    
    dropoffRequired_ = false;
  }

  public static final int CUSTOMDROPOFFPLACE_FIELD_NUMBER = 9;
  /**
   * <pre>
   * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customDropoffPlace = 9;</code>
   * @return Whether the customDropoffPlace field is set.
   */
  @java.lang.Override
  public boolean hasCustomDropoffPlace() {
    return dropoffPlaceCase_ == 9;
  }
  /**
   * <pre>
   * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customDropoffPlace = 9;</code>
   * @return The customDropoffPlace.
   */
  @java.lang.Override
  public java.lang.String getCustomDropoffPlace() {
    java.lang.String ref = "";
    if (dropoffPlaceCase_ == 9) {
      ref = (java.lang.String) dropoffPlace_;
    }
    return ref;
  }
  /**
   * <pre>
   * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customDropoffPlace = 9;</code>
   * @return The bytes for customDropoffPlace.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCustomDropoffPlaceBytes() {
    java.lang.String ref = "";
    if (dropoffPlaceCase_ == 9) {
      ref = (java.lang.String) dropoffPlace_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customDropoffPlace = 9;</code>
   * @param value The customDropoffPlace to set.
   */
  private void setCustomDropoffPlace(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  dropoffPlaceCase_ = 9;
    dropoffPlace_ = value;
  }
  /**
   * <pre>
   * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customDropoffPlace = 9;</code>
   */
  private void clearCustomDropoffPlace() {
    if (dropoffPlaceCase_ == 9) {
      dropoffPlaceCase_ = 0;
      dropoffPlace_ = null;
    }
  }
  /**
   * <pre>
   * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
   * if customer actually wants custom location.
   * </pre>
   *
   * <code>string customDropoffPlace = 9;</code>
   * @param value The bytes for customDropoffPlace to set.
   */
  private void setCustomDropoffPlaceBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    dropoffPlace_ = value.toStringUtf8();
    dropoffPlaceCase_ = 9;
  }

  public static final int PREDEFINEDDROPOFFPLACE_FIELD_NUMBER = 10;
  /**
   * <pre>
   * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
   * Should match location from ProductDescription::dropoffPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
   */
  @java.lang.Override
  public boolean hasPredefinedDropoffPlace() {
    return dropoffPlaceCase_ == 10;
  }
  /**
   * <pre>
   * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
   * Should match location from ProductDescription::dropoffPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.PickupDropoffPlace getPredefinedDropoffPlace() {
    if (dropoffPlaceCase_ == 10) {
       return (io.bokun.inventory.common.api.grpc.PickupDropoffPlace) dropoffPlace_;
    }
    return io.bokun.inventory.common.api.grpc.PickupDropoffPlace.getDefaultInstance();
  }
  /**
   * <pre>
   * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
   * Should match location from ProductDescription::dropoffPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
   */
  private void setPredefinedDropoffPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
    value.getClass();
  dropoffPlace_ = value;
    dropoffPlaceCase_ = 10;
  }
  /**
   * <pre>
   * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
   * Should match location from ProductDescription::dropoffPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
   */
  private void mergePredefinedDropoffPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
    value.getClass();
  if (dropoffPlaceCase_ == 10 &&
        dropoffPlace_ != io.bokun.inventory.common.api.grpc.PickupDropoffPlace.getDefaultInstance()) {
      dropoffPlace_ = io.bokun.inventory.common.api.grpc.PickupDropoffPlace.newBuilder((io.bokun.inventory.common.api.grpc.PickupDropoffPlace) dropoffPlace_)
          .mergeFrom(value).buildPartial();
    } else {
      dropoffPlace_ = value;
    }
    dropoffPlaceCase_ = 10;
  }
  /**
   * <pre>
   * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
   * Should match location from ProductDescription::dropoffPlaces of booked product.
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
   */
  private void clearPredefinedDropoffPlace() {
    if (dropoffPlaceCase_ == 10) {
      dropoffPlaceCase_ = 0;
      dropoffPlace_ = null;
    }
  }

  public static final int RESERVATIONS_FIELD_NUMBER = 11;
  private com.google.protobuf.Internal.ProtobufList<io.bokun.inventory.common.api.grpc.Reservation> reservations_;
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  @java.lang.Override
  public java.util.List<io.bokun.inventory.common.api.grpc.Reservation> getReservationsList() {
    return reservations_;
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  public java.util.List<? extends io.bokun.inventory.common.api.grpc.ReservationOrBuilder> 
      getReservationsOrBuilderList() {
    return reservations_;
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  @java.lang.Override
  public int getReservationsCount() {
    return reservations_.size();
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.Reservation getReservations(int index) {
    return reservations_.get(index);
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  public io.bokun.inventory.common.api.grpc.ReservationOrBuilder getReservationsOrBuilder(
      int index) {
    return reservations_.get(index);
  }
  private void ensureReservationsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<io.bokun.inventory.common.api.grpc.Reservation> tmp = reservations_;
    if (!tmp.isModifiable()) {
      reservations_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  private void setReservations(
      int index, io.bokun.inventory.common.api.grpc.Reservation value) {
    value.getClass();
  ensureReservationsIsMutable();
    reservations_.set(index, value);
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  private void addReservations(io.bokun.inventory.common.api.grpc.Reservation value) {
    value.getClass();
  ensureReservationsIsMutable();
    reservations_.add(value);
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  private void addReservations(
      int index, io.bokun.inventory.common.api.grpc.Reservation value) {
    value.getClass();
  ensureReservationsIsMutable();
    reservations_.add(index, value);
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  private void addAllReservations(
      java.lang.Iterable<? extends io.bokun.inventory.common.api.grpc.Reservation> values) {
    ensureReservationsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, reservations_);
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  private void clearReservations() {
    reservations_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
   * </pre>
   *
   * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
   */
  private void removeReservations(int index) {
    ensureReservationsIsMutable();
    reservations_.remove(index);
  }

  public static final int PLATFORMID_FIELD_NUMBER = 12;
  private java.lang.String platformId_;
  /**
   * <pre>
   * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
   * to make backrefrence from their own reservation/booking towards platform reservation/booking.
   * </pre>
   *
   * <code>string platformId = 12;</code>
   * @return The platformId.
   */
  @java.lang.Override
  public java.lang.String getPlatformId() {
    return platformId_;
  }
  /**
   * <pre>
   * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
   * to make backrefrence from their own reservation/booking towards platform reservation/booking.
   * </pre>
   *
   * <code>string platformId = 12;</code>
   * @return The bytes for platformId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPlatformIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(platformId_);
  }
  /**
   * <pre>
   * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
   * to make backrefrence from their own reservation/booking towards platform reservation/booking.
   * </pre>
   *
   * <code>string platformId = 12;</code>
   * @param value The platformId to set.
   */
  private void setPlatformId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    platformId_ = value;
  }
  /**
   * <pre>
   * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
   * to make backrefrence from their own reservation/booking towards platform reservation/booking.
   * </pre>
   *
   * <code>string platformId = 12;</code>
   */
  private void clearPlatformId() {
    
    platformId_ = getDefaultInstance().getPlatformId();
  }
  /**
   * <pre>
   * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
   * to make backrefrence from their own reservation/booking towards platform reservation/booking.
   * </pre>
   *
   * <code>string platformId = 12;</code>
   * @param value The bytes for platformId to set.
   */
  private void setPlatformIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    platformId_ = value.toStringUtf8();
    
  }

  public static final int BOOKINGSOURCE_FIELD_NUMBER = 13;
  private io.bokun.inventory.common.api.grpc.BookingSource bookingSource_;
  /**
   * <pre>
   * Booking source from which booking has originated
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
   */
  @java.lang.Override
  public boolean hasBookingSource() {
    return bookingSource_ != null;
  }
  /**
   * <pre>
   * Booking source from which booking has originated
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
   */
  @java.lang.Override
  public io.bokun.inventory.common.api.grpc.BookingSource getBookingSource() {
    return bookingSource_ == null ? io.bokun.inventory.common.api.grpc.BookingSource.getDefaultInstance() : bookingSource_;
  }
  /**
   * <pre>
   * Booking source from which booking has originated
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
   */
  private void setBookingSource(io.bokun.inventory.common.api.grpc.BookingSource value) {
    value.getClass();
  bookingSource_ = value;
    
    }
  /**
   * <pre>
   * Booking source from which booking has originated
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBookingSource(io.bokun.inventory.common.api.grpc.BookingSource value) {
    value.getClass();
  if (bookingSource_ != null &&
        bookingSource_ != io.bokun.inventory.common.api.grpc.BookingSource.getDefaultInstance()) {
      bookingSource_ =
        io.bokun.inventory.common.api.grpc.BookingSource.newBuilder(bookingSource_).mergeFrom(value).buildPartial();
    } else {
      bookingSource_ = value;
    }
    
  }
  /**
   * <pre>
   * Booking source from which booking has originated
   * </pre>
   *
   * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
   */
  private void clearBookingSource() {  bookingSource_ = null;
    
  }

  public static final int EXTERNALSALEID_FIELD_NUMBER = 14;
  private java.lang.String externalSaleId_;
  /**
   * <pre>
   * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
   * which came from that source.
   * </pre>
   *
   * <code>string externalSaleId = 14;</code>
   * @return The externalSaleId.
   */
  @java.lang.Override
  public java.lang.String getExternalSaleId() {
    return externalSaleId_;
  }
  /**
   * <pre>
   * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
   * which came from that source.
   * </pre>
   *
   * <code>string externalSaleId = 14;</code>
   * @return The bytes for externalSaleId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExternalSaleIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(externalSaleId_);
  }
  /**
   * <pre>
   * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
   * which came from that source.
   * </pre>
   *
   * <code>string externalSaleId = 14;</code>
   * @param value The externalSaleId to set.
   */
  private void setExternalSaleId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    externalSaleId_ = value;
  }
  /**
   * <pre>
   * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
   * which came from that source.
   * </pre>
   *
   * <code>string externalSaleId = 14;</code>
   */
  private void clearExternalSaleId() {
    
    externalSaleId_ = getDefaultInstance().getExternalSaleId();
  }
  /**
   * <pre>
   * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
   * which came from that source.
   * </pre>
   *
   * <code>string externalSaleId = 14;</code>
   * @param value The bytes for externalSaleId to set.
   */
  private void setExternalSaleIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    externalSaleId_ = value.toStringUtf8();
    
  }

  public static final int AGENTCODE_FIELD_NUMBER = 15;
  private java.lang.String agentCode_;
  /**
   * <pre>
   * In case of agent booking - agent code. Optional
   * </pre>
   *
   * <code>string agentCode = 15;</code>
   * @return The agentCode.
   */
  @java.lang.Override
  public java.lang.String getAgentCode() {
    return agentCode_;
  }
  /**
   * <pre>
   * In case of agent booking - agent code. Optional
   * </pre>
   *
   * <code>string agentCode = 15;</code>
   * @return The bytes for agentCode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAgentCodeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(agentCode_);
  }
  /**
   * <pre>
   * In case of agent booking - agent code. Optional
   * </pre>
   *
   * <code>string agentCode = 15;</code>
   * @param value The agentCode to set.
   */
  private void setAgentCode(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    agentCode_ = value;
  }
  /**
   * <pre>
   * In case of agent booking - agent code. Optional
   * </pre>
   *
   * <code>string agentCode = 15;</code>
   */
  private void clearAgentCode() {
    
    agentCode_ = getDefaultInstance().getAgentCode();
  }
  /**
   * <pre>
   * In case of agent booking - agent code. Optional
   * </pre>
   *
   * <code>string agentCode = 15;</code>
   * @param value The bytes for agentCode to set.
   */
  private void setAgentCodeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    agentCode_ = value.toStringUtf8();
    
  }

  public static final int PLATFORMBOOKINGID_FIELD_NUMBER = 16;
  private java.lang.String platformBookingId_;
  /**
   * <pre>
   * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
   * </pre>
   *
   * <code>string platformBookingId = 16;</code>
   * @return The platformBookingId.
   */
  @java.lang.Override
  public java.lang.String getPlatformBookingId() {
    return platformBookingId_;
  }
  /**
   * <pre>
   * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
   * </pre>
   *
   * <code>string platformBookingId = 16;</code>
   * @return The bytes for platformBookingId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPlatformBookingIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(platformBookingId_);
  }
  /**
   * <pre>
   * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
   * </pre>
   *
   * <code>string platformBookingId = 16;</code>
   * @param value The platformBookingId to set.
   */
  private void setPlatformBookingId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    platformBookingId_ = value;
  }
  /**
   * <pre>
   * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
   * </pre>
   *
   * <code>string platformBookingId = 16;</code>
   */
  private void clearPlatformBookingId() {
    
    platformBookingId_ = getDefaultInstance().getPlatformBookingId();
  }
  /**
   * <pre>
   * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
   * </pre>
   *
   * <code>string platformBookingId = 16;</code>
   * @param value The bytes for platformBookingId to set.
   */
  private void setPlatformBookingIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    platformBookingId_ = value.toStringUtf8();
    
  }

  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.service.booking.grpc.ReservationData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.service.booking.grpc.ReservationData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code io.bokun.inventory.service.booking.grpc.ReservationData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.service.booking.grpc.ReservationData, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.service.booking.grpc.ReservationData)
      io.bokun.inventory.service.booking.grpc.ReservationDataOrBuilder {
    // Construct using io.bokun.inventory.service.booking.grpc.ReservationData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public PickupPlaceCase
        getPickupPlaceCase() {
      return instance.getPickupPlaceCase();
    }

    public Builder clearPickupPlace() {
      copyOnWrite();
      instance.clearPickupPlace();
      return this;
    }

    @java.lang.Override
    public DropoffPlaceCase
        getDropoffPlaceCase() {
      return instance.getDropoffPlaceCase();
    }

    public Builder clearDropoffPlace() {
      copyOnWrite();
      instance.clearDropoffPlace();
      return this;
    }


    /**
     * <pre>
     * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
     */
    @java.lang.Override
    public boolean hasCustomerContact() {
      return instance.hasCustomerContact();
    }
    /**
     * <pre>
     * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Contact getCustomerContact() {
      return instance.getCustomerContact();
    }
    /**
     * <pre>
     * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
     */
    public Builder setCustomerContact(io.bokun.inventory.common.api.grpc.Contact value) {
      copyOnWrite();
      instance.setCustomerContact(value);
      return this;
      }
    /**
     * <pre>
     * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
     */
    public Builder setCustomerContact(
        io.bokun.inventory.common.api.grpc.Contact.Builder builderForValue) {
      copyOnWrite();
      instance.setCustomerContact(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
     */
    public Builder mergeCustomerContact(io.bokun.inventory.common.api.grpc.Contact value) {
      copyOnWrite();
      instance.mergeCustomerContact(value);
      return this;
    }
    /**
     * <pre>
     * Contact of the customer who has reserved this booking (otherwise known as "lead customer"). Optional.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Contact customerContact = 1;</code>
     */
    public Builder clearCustomerContact() {  copyOnWrite();
      instance.clearCustomerContact();
      return this;
    }

    /**
     * <pre>
     * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
     * </pre>
     *
     * <code>string notes = 2;</code>
     * @return The notes.
     */
    @java.lang.Override
    public java.lang.String getNotes() {
      return instance.getNotes();
    }
    /**
     * <pre>
     * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
     * </pre>
     *
     * <code>string notes = 2;</code>
     * @return The bytes for notes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNotesBytes() {
      return instance.getNotesBytes();
    }
    /**
     * <pre>
     * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
     * </pre>
     *
     * <code>string notes = 2;</code>
     * @param value The notes to set.
     * @return This builder for chaining.
     */
    public Builder setNotes(
        java.lang.String value) {
      copyOnWrite();
      instance.setNotes(value);
      return this;
    }
    /**
     * <pre>
     * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
     * </pre>
     *
     * <code>string notes = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNotes() {
      copyOnWrite();
      instance.clearNotes();
      return this;
    }
    /**
     * <pre>
     * Notes captured by a person who entered this booking (may also be customer itself if booked online). Optional.
     * </pre>
     *
     * <code>string notes = 2;</code>
     * @param value The bytes for notes to set.
     * @return This builder for chaining.
     */
    public Builder setNotesBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNotesBytes(value);
      return this;
    }

    /**
     * <pre>
     * Day of the event should take place. Mandatory for all but PASS type activities.
     * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
     */
    @java.lang.Override
    public boolean hasDate() {
      return instance.hasDate();
    }
    /**
     * <pre>
     * Day of the event should take place. Mandatory for all but PASS type activities.
     * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Date getDate() {
      return instance.getDate();
    }
    /**
     * <pre>
     * Day of the event should take place. Mandatory for all but PASS type activities.
     * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
     */
    public Builder setDate(io.bokun.inventory.common.api.grpc.Date value) {
      copyOnWrite();
      instance.setDate(value);
      return this;
      }
    /**
     * <pre>
     * Day of the event should take place. Mandatory for all but PASS type activities.
     * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
     */
    public Builder setDate(
        io.bokun.inventory.common.api.grpc.Date.Builder builderForValue) {
      copyOnWrite();
      instance.setDate(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Day of the event should take place. Mandatory for all but PASS type activities.
     * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
     */
    public Builder mergeDate(io.bokun.inventory.common.api.grpc.Date value) {
      copyOnWrite();
      instance.mergeDate(value);
      return this;
    }
    /**
     * <pre>
     * Day of the event should take place. Mandatory for all but PASS type activities.
     * Must match available date, as provided provided with ProductAvailabilityWithRatesResponse::date
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Date date = 3;</code>
     */
    public Builder clearDate() {  copyOnWrite();
      instance.clearDate();
      return this;
    }

    /**
     * <pre>
     * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
     * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
     */
    @java.lang.Override
    public boolean hasTime() {
      return instance.hasTime();
    }
    /**
     * <pre>
     * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
     * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Time getTime() {
      return instance.getTime();
    }
    /**
     * <pre>
     * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
     * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
     */
    public Builder setTime(io.bokun.inventory.common.api.grpc.Time value) {
      copyOnWrite();
      instance.setTime(value);
      return this;
      }
    /**
     * <pre>
     * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
     * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
     */
    public Builder setTime(
        io.bokun.inventory.common.api.grpc.Time.Builder builderForValue) {
      copyOnWrite();
      instance.setTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
     * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
     */
    public Builder mergeTime(io.bokun.inventory.common.api.grpc.Time value) {
      copyOnWrite();
      instance.mergeTime(value);
      return this;
    }
    /**
     * <pre>
     * Desired start time. Mandatory if ProductDescription::bookingType is DATE_AND_TIME, otherwise null.
     * Must match available time, as provided with ProductAvailabilityWithRatesResponse::time
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.Time time = 4;</code>
     */
    public Builder clearTime() {  copyOnWrite();
      instance.clearTime();
      return this;
    }

    /**
     * <pre>
     * Whether pickup is required. Only relevant if ProductDescription::pickupAvailable of booked product is true.
     * </pre>
     *
     * <code>bool pickupRequired = 5;</code>
     * @return The pickupRequired.
     */
    @java.lang.Override
    public boolean getPickupRequired() {
      return instance.getPickupRequired();
    }
    /**
     * <pre>
     * Whether pickup is required. Only relevant if ProductDescription::pickupAvailable of booked product is true.
     * </pre>
     *
     * <code>bool pickupRequired = 5;</code>
     * @param value The pickupRequired to set.
     * @return This builder for chaining.
     */
    public Builder setPickupRequired(boolean value) {
      copyOnWrite();
      instance.setPickupRequired(value);
      return this;
    }
    /**
     * <pre>
     * Whether pickup is required. Only relevant if ProductDescription::pickupAvailable of booked product is true.
     * </pre>
     *
     * <code>bool pickupRequired = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPickupRequired() {
      copyOnWrite();
      instance.clearPickupRequired();
      return this;
    }

    /**
     * <pre>
     * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customPickupPlace = 6;</code>
     * @return Whether the customPickupPlace field is set.
     */
    @java.lang.Override
    public boolean hasCustomPickupPlace() {
      return instance.hasCustomPickupPlace();
    }
    /**
     * <pre>
     * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customPickupPlace = 6;</code>
     * @return The customPickupPlace.
     */
    @java.lang.Override
    public java.lang.String getCustomPickupPlace() {
      return instance.getCustomPickupPlace();
    }
    /**
     * <pre>
     * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customPickupPlace = 6;</code>
     * @return The bytes for customPickupPlace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCustomPickupPlaceBytes() {
      return instance.getCustomPickupPlaceBytes();
    }
    /**
     * <pre>
     * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customPickupPlace = 6;</code>
     * @param value The customPickupPlace to set.
     * @return This builder for chaining.
     */
    public Builder setCustomPickupPlace(
        java.lang.String value) {
      copyOnWrite();
      instance.setCustomPickupPlace(value);
      return this;
    }
    /**
     * <pre>
     * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customPickupPlace = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearCustomPickupPlace() {
      copyOnWrite();
      instance.clearCustomPickupPlace();
      return this;
    }
    /**
     * <pre>
     * Custom pickup location. Only relevant if ProductDescription::pickupAvailable and ProductDescription::customPickupPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customPickupPlace = 6;</code>
     * @param value The bytes for customPickupPlace to set.
     * @return This builder for chaining.
     */
    public Builder setCustomPickupPlaceBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCustomPickupPlaceBytes(value);
      return this;
    }

    /**
     * <pre>
     * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
     * Should match location from ProductDescription::pickupPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
     */
    @java.lang.Override
    public boolean hasPredefinedPickupPlace() {
      return instance.hasPredefinedPickupPlace();
    }
    /**
     * <pre>
     * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
     * Should match location from ProductDescription::pickupPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.PickupDropoffPlace getPredefinedPickupPlace() {
      return instance.getPredefinedPickupPlace();
    }
    /**
     * <pre>
     * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
     * Should match location from ProductDescription::pickupPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
     */
    public Builder setPredefinedPickupPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
      copyOnWrite();
      instance.setPredefinedPickupPlace(value);
      return this;
    }
    /**
     * <pre>
     * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
     * Should match location from ProductDescription::pickupPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
     */
    public Builder setPredefinedPickupPlace(
        io.bokun.inventory.common.api.grpc.PickupDropoffPlace.Builder builderForValue) {
      copyOnWrite();
      instance.setPredefinedPickupPlace(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
     * Should match location from ProductDescription::pickupPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
     */
    public Builder mergePredefinedPickupPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
      copyOnWrite();
      instance.mergePredefinedPickupPlace(value);
      return this;
    }
    /**
     * <pre>
     * Pickup location. Only relevant if ProductDescription::pickupAvailable is true. Should only be set if ::pickupRequired is true.
     * Should match location from ProductDescription::pickupPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedPickupPlace = 7;</code>
     */
    public Builder clearPredefinedPickupPlace() {
      copyOnWrite();
      instance.clearPredefinedPickupPlace();
      return this;
    }

    /**
     * <pre>
     * Whether drop off is required. Only relevant if ProductDescription::dropoffAvailable of booked product is true.
     * </pre>
     *
     * <code>bool dropoffRequired = 8;</code>
     * @return The dropoffRequired.
     */
    @java.lang.Override
    public boolean getDropoffRequired() {
      return instance.getDropoffRequired();
    }
    /**
     * <pre>
     * Whether drop off is required. Only relevant if ProductDescription::dropoffAvailable of booked product is true.
     * </pre>
     *
     * <code>bool dropoffRequired = 8;</code>
     * @param value The dropoffRequired to set.
     * @return This builder for chaining.
     */
    public Builder setDropoffRequired(boolean value) {
      copyOnWrite();
      instance.setDropoffRequired(value);
      return this;
    }
    /**
     * <pre>
     * Whether drop off is required. Only relevant if ProductDescription::dropoffAvailable of booked product is true.
     * </pre>
     *
     * <code>bool dropoffRequired = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDropoffRequired() {
      copyOnWrite();
      instance.clearDropoffRequired();
      return this;
    }

    /**
     * <pre>
     * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customDropoffPlace = 9;</code>
     * @return Whether the customDropoffPlace field is set.
     */
    @java.lang.Override
    public boolean hasCustomDropoffPlace() {
      return instance.hasCustomDropoffPlace();
    }
    /**
     * <pre>
     * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customDropoffPlace = 9;</code>
     * @return The customDropoffPlace.
     */
    @java.lang.Override
    public java.lang.String getCustomDropoffPlace() {
      return instance.getCustomDropoffPlace();
    }
    /**
     * <pre>
     * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customDropoffPlace = 9;</code>
     * @return The bytes for customDropoffPlace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCustomDropoffPlaceBytes() {
      return instance.getCustomDropoffPlaceBytes();
    }
    /**
     * <pre>
     * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customDropoffPlace = 9;</code>
     * @param value The customDropoffPlace to set.
     * @return This builder for chaining.
     */
    public Builder setCustomDropoffPlace(
        java.lang.String value) {
      copyOnWrite();
      instance.setCustomDropoffPlace(value);
      return this;
    }
    /**
     * <pre>
     * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customDropoffPlace = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearCustomDropoffPlace() {
      copyOnWrite();
      instance.clearCustomDropoffPlace();
      return this;
    }
    /**
     * <pre>
     * Custom drop off location. Only relevant if ProductDescription::dropoffAvailable and ProductDescription::customDropoffPlaceAllowed are true and
     * if customer actually wants custom location.
     * </pre>
     *
     * <code>string customDropoffPlace = 9;</code>
     * @param value The bytes for customDropoffPlace to set.
     * @return This builder for chaining.
     */
    public Builder setCustomDropoffPlaceBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCustomDropoffPlaceBytes(value);
      return this;
    }

    /**
     * <pre>
     * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
     * Should match location from ProductDescription::dropoffPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
     */
    @java.lang.Override
    public boolean hasPredefinedDropoffPlace() {
      return instance.hasPredefinedDropoffPlace();
    }
    /**
     * <pre>
     * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
     * Should match location from ProductDescription::dropoffPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.PickupDropoffPlace getPredefinedDropoffPlace() {
      return instance.getPredefinedDropoffPlace();
    }
    /**
     * <pre>
     * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
     * Should match location from ProductDescription::dropoffPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
     */
    public Builder setPredefinedDropoffPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
      copyOnWrite();
      instance.setPredefinedDropoffPlace(value);
      return this;
    }
    /**
     * <pre>
     * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
     * Should match location from ProductDescription::dropoffPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
     */
    public Builder setPredefinedDropoffPlace(
        io.bokun.inventory.common.api.grpc.PickupDropoffPlace.Builder builderForValue) {
      copyOnWrite();
      instance.setPredefinedDropoffPlace(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
     * Should match location from ProductDescription::dropoffPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
     */
    public Builder mergePredefinedDropoffPlace(io.bokun.inventory.common.api.grpc.PickupDropoffPlace value) {
      copyOnWrite();
      instance.mergePredefinedDropoffPlace(value);
      return this;
    }
    /**
     * <pre>
     * Drop off location. Only relevant if ProductDescription::dropoffAvailable is true. Should only be set if ::dropoffRequired is true.
     * Should match location from ProductDescription::dropoffPlaces of booked product.
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.PickupDropoffPlace predefinedDropoffPlace = 10;</code>
     */
    public Builder clearPredefinedDropoffPlace() {
      copyOnWrite();
      instance.clearPredefinedDropoffPlace();
      return this;
    }

    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    @java.lang.Override
    public java.util.List<io.bokun.inventory.common.api.grpc.Reservation> getReservationsList() {
      return java.util.Collections.unmodifiableList(
          instance.getReservationsList());
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    @java.lang.Override
    public int getReservationsCount() {
      return instance.getReservationsCount();
    }/**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.Reservation getReservations(int index) {
      return instance.getReservations(index);
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder setReservations(
        int index, io.bokun.inventory.common.api.grpc.Reservation value) {
      copyOnWrite();
      instance.setReservations(index, value);
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder setReservations(
        int index, io.bokun.inventory.common.api.grpc.Reservation.Builder builderForValue) {
      copyOnWrite();
      instance.setReservations(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder addReservations(io.bokun.inventory.common.api.grpc.Reservation value) {
      copyOnWrite();
      instance.addReservations(value);
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder addReservations(
        int index, io.bokun.inventory.common.api.grpc.Reservation value) {
      copyOnWrite();
      instance.addReservations(index, value);
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder addReservations(
        io.bokun.inventory.common.api.grpc.Reservation.Builder builderForValue) {
      copyOnWrite();
      instance.addReservations(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder addReservations(
        int index, io.bokun.inventory.common.api.grpc.Reservation.Builder builderForValue) {
      copyOnWrite();
      instance.addReservations(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder addAllReservations(
        java.lang.Iterable<? extends io.bokun.inventory.common.api.grpc.Reservation> values) {
      copyOnWrite();
      instance.addAllReservations(values);
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder clearReservations() {
      copyOnWrite();
      instance.clearReservations();
      return this;
    }
    /**
     * <pre>
     * Reservations for this request. Each reservation should be formed for concrete pricing category, rate and product
     * </pre>
     *
     * <code>repeated .io.bokun.inventory.common.api.grpc.Reservation reservations = 11;</code>
     */
    public Builder removeReservations(int index) {
      copyOnWrite();
      instance.removeReservations(index);
      return this;
    }

    /**
     * <pre>
     * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
     * to make backrefrence from their own reservation/booking towards platform reservation/booking.
     * </pre>
     *
     * <code>string platformId = 12;</code>
     * @return The platformId.
     */
    @java.lang.Override
    public java.lang.String getPlatformId() {
      return instance.getPlatformId();
    }
    /**
     * <pre>
     * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
     * to make backrefrence from their own reservation/booking towards platform reservation/booking.
     * </pre>
     *
     * <code>string platformId = 12;</code>
     * @return The bytes for platformId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPlatformIdBytes() {
      return instance.getPlatformIdBytes();
    }
    /**
     * <pre>
     * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
     * to make backrefrence from their own reservation/booking towards platform reservation/booking.
     * </pre>
     *
     * <code>string platformId = 12;</code>
     * @param value The platformId to set.
     * @return This builder for chaining.
     */
    public Builder setPlatformId(
        java.lang.String value) {
      copyOnWrite();
      instance.setPlatformId(value);
      return this;
    }
    /**
     * <pre>
     * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
     * to make backrefrence from their own reservation/booking towards platform reservation/booking.
     * </pre>
     *
     * <code>string platformId = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlatformId() {
      copyOnWrite();
      instance.clearPlatformId();
      return this;
    }
    /**
     * <pre>
     * This is some unique id which is genarated by the Bókun platform for this reservation. Plugins may ignore it, or may use this field in order
     * to make backrefrence from their own reservation/booking towards platform reservation/booking.
     * </pre>
     *
     * <code>string platformId = 12;</code>
     * @param value The bytes for platformId to set.
     * @return This builder for chaining.
     */
    public Builder setPlatformIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPlatformIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Booking source from which booking has originated
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
     */
    @java.lang.Override
    public boolean hasBookingSource() {
      return instance.hasBookingSource();
    }
    /**
     * <pre>
     * Booking source from which booking has originated
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
     */
    @java.lang.Override
    public io.bokun.inventory.common.api.grpc.BookingSource getBookingSource() {
      return instance.getBookingSource();
    }
    /**
     * <pre>
     * Booking source from which booking has originated
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
     */
    public Builder setBookingSource(io.bokun.inventory.common.api.grpc.BookingSource value) {
      copyOnWrite();
      instance.setBookingSource(value);
      return this;
      }
    /**
     * <pre>
     * Booking source from which booking has originated
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
     */
    public Builder setBookingSource(
        io.bokun.inventory.common.api.grpc.BookingSource.Builder builderForValue) {
      copyOnWrite();
      instance.setBookingSource(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Booking source from which booking has originated
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
     */
    public Builder mergeBookingSource(io.bokun.inventory.common.api.grpc.BookingSource value) {
      copyOnWrite();
      instance.mergeBookingSource(value);
      return this;
    }
    /**
     * <pre>
     * Booking source from which booking has originated
     * </pre>
     *
     * <code>.io.bokun.inventory.common.api.grpc.BookingSource bookingSource = 13;</code>
     */
    public Builder clearBookingSource() {  copyOnWrite();
      instance.clearBookingSource();
      return this;
    }

    /**
     * <pre>
     * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
     * which came from that source.
     * </pre>
     *
     * <code>string externalSaleId = 14;</code>
     * @return The externalSaleId.
     */
    @java.lang.Override
    public java.lang.String getExternalSaleId() {
      return instance.getExternalSaleId();
    }
    /**
     * <pre>
     * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
     * which came from that source.
     * </pre>
     *
     * <code>string externalSaleId = 14;</code>
     * @return The bytes for externalSaleId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExternalSaleIdBytes() {
      return instance.getExternalSaleIdBytes();
    }
    /**
     * <pre>
     * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
     * which came from that source.
     * </pre>
     *
     * <code>string externalSaleId = 14;</code>
     * @param value The externalSaleId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalSaleId(
        java.lang.String value) {
      copyOnWrite();
      instance.setExternalSaleId(value);
      return this;
    }
    /**
     * <pre>
     * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
     * which came from that source.
     * </pre>
     *
     * <code>string externalSaleId = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearExternalSaleId() {
      copyOnWrite();
      instance.clearExternalSaleId();
      return this;
    }
    /**
     * <pre>
     * In case this was booked by an external source (such as Expedia, Get Your Guide, Viator, etc.) this field will contain the reference number
     * which came from that source.
     * </pre>
     *
     * <code>string externalSaleId = 14;</code>
     * @param value The bytes for externalSaleId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalSaleIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setExternalSaleIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * In case of agent booking - agent code. Optional
     * </pre>
     *
     * <code>string agentCode = 15;</code>
     * @return The agentCode.
     */
    @java.lang.Override
    public java.lang.String getAgentCode() {
      return instance.getAgentCode();
    }
    /**
     * <pre>
     * In case of agent booking - agent code. Optional
     * </pre>
     *
     * <code>string agentCode = 15;</code>
     * @return The bytes for agentCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAgentCodeBytes() {
      return instance.getAgentCodeBytes();
    }
    /**
     * <pre>
     * In case of agent booking - agent code. Optional
     * </pre>
     *
     * <code>string agentCode = 15;</code>
     * @param value The agentCode to set.
     * @return This builder for chaining.
     */
    public Builder setAgentCode(
        java.lang.String value) {
      copyOnWrite();
      instance.setAgentCode(value);
      return this;
    }
    /**
     * <pre>
     * In case of agent booking - agent code. Optional
     * </pre>
     *
     * <code>string agentCode = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearAgentCode() {
      copyOnWrite();
      instance.clearAgentCode();
      return this;
    }
    /**
     * <pre>
     * In case of agent booking - agent code. Optional
     * </pre>
     *
     * <code>string agentCode = 15;</code>
     * @param value The bytes for agentCode to set.
     * @return This builder for chaining.
     */
    public Builder setAgentCodeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setAgentCodeBytes(value);
      return this;
    }

    /**
     * <pre>
     * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
     * </pre>
     *
     * <code>string platformBookingId = 16;</code>
     * @return The platformBookingId.
     */
    @java.lang.Override
    public java.lang.String getPlatformBookingId() {
      return instance.getPlatformBookingId();
    }
    /**
     * <pre>
     * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
     * </pre>
     *
     * <code>string platformBookingId = 16;</code>
     * @return The bytes for platformBookingId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPlatformBookingIdBytes() {
      return instance.getPlatformBookingIdBytes();
    }
    /**
     * <pre>
     * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
     * </pre>
     *
     * <code>string platformBookingId = 16;</code>
     * @param value The platformBookingId to set.
     * @return This builder for chaining.
     */
    public Builder setPlatformBookingId(
        java.lang.String value) {
      copyOnWrite();
      instance.setPlatformBookingId(value);
      return this;
    }
    /**
     * <pre>
     * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
     * </pre>
     *
     * <code>string platformBookingId = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlatformBookingId() {
      copyOnWrite();
      instance.clearPlatformBookingId();
      return this;
    }
    /**
     * <pre>
     * This refers to a booking ID in Bokun platform. Sent at earliest possibility; guaranteed to be sent at confirmation stage.
     * </pre>
     *
     * <code>string platformBookingId = 16;</code>
     * @param value The bytes for platformBookingId to set.
     * @return This builder for chaining.
     */
    public Builder setPlatformBookingIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPlatformBookingIdBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.service.booking.grpc.ReservationData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.service.booking.grpc.ReservationData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "pickupPlace_",
            "pickupPlaceCase_",
            "dropoffPlace_",
            "dropoffPlaceCase_",
            "customerContact_",
            "notes_",
            "date_",
            "time_",
            "pickupRequired_",
            io.bokun.inventory.common.api.grpc.PickupDropoffPlace.class,
            "dropoffRequired_",
            io.bokun.inventory.common.api.grpc.PickupDropoffPlace.class,
            "reservations_",
            io.bokun.inventory.common.api.grpc.Reservation.class,
            "platformId_",
            "bookingSource_",
            "externalSaleId_",
            "agentCode_",
            "platformBookingId_",
          };
          java.lang.String info =
              "\u0000\u0010\u0002\u0000\u0001\u0010\u0010\u0000\u0001\u0000\u0001\t\u0002\u0208" +
              "\u0003\t\u0004\t\u0005\u0007\u0006\u023b\u0000\u0007<\u0000\b\u0007\t\u023b\u0001" +
              "\n<\u0001\u000b\u001b\f\u0208\r\t\u000e\u0208\u000f\u0208\u0010\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.service.booking.grpc.ReservationData> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.service.booking.grpc.ReservationData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.service.booking.grpc.ReservationData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.service.booking.grpc.ReservationData)
  private static final io.bokun.inventory.service.booking.grpc.ReservationData DEFAULT_INSTANCE;
  static {
    ReservationData defaultInstance = new ReservationData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ReservationData.class, defaultInstance);
  }

  public static io.bokun.inventory.service.booking.grpc.ReservationData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ReservationData> PARSER;

  public static com.google.protobuf.Parser<ReservationData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

