// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin_service.proto

package io.bokun.inventory.service.plugin.grpc;

/**
 * Protobuf type {@code io.bokun.inventory.service.plugin.grpc.PluginUrl}
 */
public  final class PluginUrl extends
    com.google.protobuf.GeneratedMessageLite<
        PluginUrl, PluginUrl.Builder> implements
    // @@protoc_insertion_point(message_implements:io.bokun.inventory.service.plugin.grpc.PluginUrl)
    PluginUrlOrBuilder {
  private PluginUrl() {
    url_ = "";
    cert_ = "";
    sharedSecret_ = "";
  }
  public static final int URL_FIELD_NUMBER = 1;
  private java.lang.String url_;
  /**
   * <pre>
   * URL of plugin which is listening on a socket. Mandatory.
   * </pre>
   *
   * <code>string url = 1;</code>
   * @return The url.
   */
  @java.lang.Override
  public java.lang.String getUrl() {
    return url_;
  }
  /**
   * <pre>
   * URL of plugin which is listening on a socket. Mandatory.
   * </pre>
   *
   * <code>string url = 1;</code>
   * @return The bytes for url.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(url_);
  }
  /**
   * <pre>
   * URL of plugin which is listening on a socket. Mandatory.
   * </pre>
   *
   * <code>string url = 1;</code>
   * @param value The url to set.
   */
  private void setUrl(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    url_ = value;
  }
  /**
   * <pre>
   * URL of plugin which is listening on a socket. Mandatory.
   * </pre>
   *
   * <code>string url = 1;</code>
   */
  private void clearUrl() {
    
    url_ = getDefaultInstance().getUrl();
  }
  /**
   * <pre>
   * URL of plugin which is listening on a socket. Mandatory.
   * </pre>
   *
   * <code>string url = 1;</code>
   * @param value The bytes for url to set.
   */
  private void setUrlBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    url_ = value.toStringUtf8();
    
  }

  public static final int TLS_FIELD_NUMBER = 2;
  private boolean tls_;
  /**
   * <pre>
   * Whether this plugin supports TLS/SSL. Mandatory.
   * </pre>
   *
   * <code>bool tls = 2;</code>
   * @return The tls.
   */
  @java.lang.Override
  public boolean getTls() {
    return tls_;
  }
  /**
   * <pre>
   * Whether this plugin supports TLS/SSL. Mandatory.
   * </pre>
   *
   * <code>bool tls = 2;</code>
   * @param value The tls to set.
   */
  private void setTls(boolean value) {
    
    tls_ = value;
  }
  /**
   * <pre>
   * Whether this plugin supports TLS/SSL. Mandatory.
   * </pre>
   *
   * <code>bool tls = 2;</code>
   */
  private void clearTls() {
    
    tls_ = false;
  }

  public static final int CERT_FIELD_NUMBER = 3;
  private java.lang.String cert_;
  /**
   * <pre>
   * SSL certificate file, only used if tls=true.
   * </pre>
   *
   * <code>string cert = 3;</code>
   * @return The cert.
   */
  @java.lang.Override
  public java.lang.String getCert() {
    return cert_;
  }
  /**
   * <pre>
   * SSL certificate file, only used if tls=true.
   * </pre>
   *
   * <code>string cert = 3;</code>
   * @return The bytes for cert.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCertBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(cert_);
  }
  /**
   * <pre>
   * SSL certificate file, only used if tls=true.
   * </pre>
   *
   * <code>string cert = 3;</code>
   * @param value The cert to set.
   */
  private void setCert(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    cert_ = value;
  }
  /**
   * <pre>
   * SSL certificate file, only used if tls=true.
   * </pre>
   *
   * <code>string cert = 3;</code>
   */
  private void clearCert() {
    
    cert_ = getDefaultInstance().getCert();
  }
  /**
   * <pre>
   * SSL certificate file, only used if tls=true.
   * </pre>
   *
   * <code>string cert = 3;</code>
   * @param value The bytes for cert to set.
   */
  private void setCertBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    cert_ = value.toStringUtf8();
    
  }

  public static final int SHAREDSECRET_FIELD_NUMBER = 4;
  private java.lang.String sharedSecret_;
  /**
   * <pre>
   * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
   * </pre>
   *
   * <code>string sharedSecret = 4;</code>
   * @return The sharedSecret.
   */
  @java.lang.Override
  public java.lang.String getSharedSecret() {
    return sharedSecret_;
  }
  /**
   * <pre>
   * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
   * </pre>
   *
   * <code>string sharedSecret = 4;</code>
   * @return The bytes for sharedSecret.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSharedSecretBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(sharedSecret_);
  }
  /**
   * <pre>
   * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
   * </pre>
   *
   * <code>string sharedSecret = 4;</code>
   * @param value The sharedSecret to set.
   */
  private void setSharedSecret(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    sharedSecret_ = value;
  }
  /**
   * <pre>
   * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
   * </pre>
   *
   * <code>string sharedSecret = 4;</code>
   */
  private void clearSharedSecret() {
    
    sharedSecret_ = getDefaultInstance().getSharedSecret();
  }
  /**
   * <pre>
   * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
   * </pre>
   *
   * <code>string sharedSecret = 4;</code>
   * @param value The bytes for sharedSecret to set.
   */
  private void setSharedSecretBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    sharedSecret_ = value.toStringUtf8();
    
  }

  public static final int TRANSPORT_FIELD_NUMBER = 5;
  private int transport_;
  /**
   * <pre>
   * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
   * @return The enum numeric value on the wire for transport.
   */
  @java.lang.Override
  public int getTransportValue() {
    return transport_;
  }
  /**
   * <pre>
   * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
   * @return The transport.
   */
  @java.lang.Override
  public io.bokun.inventory.service.plugin.grpc.PluginTransport getTransport() {
    io.bokun.inventory.service.plugin.grpc.PluginTransport result = io.bokun.inventory.service.plugin.grpc.PluginTransport.forNumber(transport_);
    return result == null ? io.bokun.inventory.service.plugin.grpc.PluginTransport.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
   * @param value The enum numeric value on the wire for transport to set.
   */
  private void setTransportValue(int value) {
      transport_ = value;
  }
  /**
   * <pre>
   * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
   * @param value The transport to set.
   */
  private void setTransport(io.bokun.inventory.service.plugin.grpc.PluginTransport value) {
    transport_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
   * </pre>
   *
   * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
   */
  private void clearTransport() {
    
    transport_ = 0;
  }

  public static final int BASICAUTHUSERNAME_FIELD_NUMBER = 6;
  private com.google.protobuf.StringValue basicAuthUsername_;
  /**
   * <pre>
   * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
   */
  @java.lang.Override
  public boolean hasBasicAuthUsername() {
    return basicAuthUsername_ != null;
  }
  /**
   * <pre>
   * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getBasicAuthUsername() {
    return basicAuthUsername_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : basicAuthUsername_;
  }
  /**
   * <pre>
   * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
   */
  private void setBasicAuthUsername(com.google.protobuf.StringValue value) {
    value.getClass();
  basicAuthUsername_ = value;
    
    }
  /**
   * <pre>
   * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBasicAuthUsername(com.google.protobuf.StringValue value) {
    value.getClass();
  if (basicAuthUsername_ != null &&
        basicAuthUsername_ != com.google.protobuf.StringValue.getDefaultInstance()) {
      basicAuthUsername_ =
        com.google.protobuf.StringValue.newBuilder(basicAuthUsername_).mergeFrom(value).buildPartial();
    } else {
      basicAuthUsername_ = value;
    }
    
  }
  /**
   * <pre>
   * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
   */
  private void clearBasicAuthUsername() {  basicAuthUsername_ = null;
    
  }

  public static final int BASICAUTHPASSWORD_FIELD_NUMBER = 7;
  private com.google.protobuf.StringValue basicAuthPassword_;
  /**
   * <pre>
   * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
   */
  @java.lang.Override
  public boolean hasBasicAuthPassword() {
    return basicAuthPassword_ != null;
  }
  /**
   * <pre>
   * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getBasicAuthPassword() {
    return basicAuthPassword_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : basicAuthPassword_;
  }
  /**
   * <pre>
   * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
   */
  private void setBasicAuthPassword(com.google.protobuf.StringValue value) {
    value.getClass();
  basicAuthPassword_ = value;
    
    }
  /**
   * <pre>
   * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBasicAuthPassword(com.google.protobuf.StringValue value) {
    value.getClass();
  if (basicAuthPassword_ != null &&
        basicAuthPassword_ != com.google.protobuf.StringValue.getDefaultInstance()) {
      basicAuthPassword_ =
        com.google.protobuf.StringValue.newBuilder(basicAuthPassword_).mergeFrom(value).buildPartial();
    } else {
      basicAuthPassword_ = value;
    }
    
  }
  /**
   * <pre>
   * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
   * </pre>
   *
   * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
   */
  private void clearBasicAuthPassword() {  basicAuthPassword_ = null;
    
  }

  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.bokun.inventory.service.plugin.grpc.PluginUrl parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.bokun.inventory.service.plugin.grpc.PluginUrl prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code io.bokun.inventory.service.plugin.grpc.PluginUrl}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.bokun.inventory.service.plugin.grpc.PluginUrl, Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bokun.inventory.service.plugin.grpc.PluginUrl)
      io.bokun.inventory.service.plugin.grpc.PluginUrlOrBuilder {
    // Construct using io.bokun.inventory.service.plugin.grpc.PluginUrl.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * URL of plugin which is listening on a socket. Mandatory.
     * </pre>
     *
     * <code>string url = 1;</code>
     * @return The url.
     */
    @java.lang.Override
    public java.lang.String getUrl() {
      return instance.getUrl();
    }
    /**
     * <pre>
     * URL of plugin which is listening on a socket. Mandatory.
     * </pre>
     *
     * <code>string url = 1;</code>
     * @return The bytes for url.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrlBytes() {
      return instance.getUrlBytes();
    }
    /**
     * <pre>
     * URL of plugin which is listening on a socket. Mandatory.
     * </pre>
     *
     * <code>string url = 1;</code>
     * @param value The url to set.
     * @return This builder for chaining.
     */
    public Builder setUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setUrl(value);
      return this;
    }
    /**
     * <pre>
     * URL of plugin which is listening on a socket. Mandatory.
     * </pre>
     *
     * <code>string url = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUrl() {
      copyOnWrite();
      instance.clearUrl();
      return this;
    }
    /**
     * <pre>
     * URL of plugin which is listening on a socket. Mandatory.
     * </pre>
     *
     * <code>string url = 1;</code>
     * @param value The bytes for url to set.
     * @return This builder for chaining.
     */
    public Builder setUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setUrlBytes(value);
      return this;
    }

    /**
     * <pre>
     * Whether this plugin supports TLS/SSL. Mandatory.
     * </pre>
     *
     * <code>bool tls = 2;</code>
     * @return The tls.
     */
    @java.lang.Override
    public boolean getTls() {
      return instance.getTls();
    }
    /**
     * <pre>
     * Whether this plugin supports TLS/SSL. Mandatory.
     * </pre>
     *
     * <code>bool tls = 2;</code>
     * @param value The tls to set.
     * @return This builder for chaining.
     */
    public Builder setTls(boolean value) {
      copyOnWrite();
      instance.setTls(value);
      return this;
    }
    /**
     * <pre>
     * Whether this plugin supports TLS/SSL. Mandatory.
     * </pre>
     *
     * <code>bool tls = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTls() {
      copyOnWrite();
      instance.clearTls();
      return this;
    }

    /**
     * <pre>
     * SSL certificate file, only used if tls=true.
     * </pre>
     *
     * <code>string cert = 3;</code>
     * @return The cert.
     */
    @java.lang.Override
    public java.lang.String getCert() {
      return instance.getCert();
    }
    /**
     * <pre>
     * SSL certificate file, only used if tls=true.
     * </pre>
     *
     * <code>string cert = 3;</code>
     * @return The bytes for cert.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCertBytes() {
      return instance.getCertBytes();
    }
    /**
     * <pre>
     * SSL certificate file, only used if tls=true.
     * </pre>
     *
     * <code>string cert = 3;</code>
     * @param value The cert to set.
     * @return This builder for chaining.
     */
    public Builder setCert(
        java.lang.String value) {
      copyOnWrite();
      instance.setCert(value);
      return this;
    }
    /**
     * <pre>
     * SSL certificate file, only used if tls=true.
     * </pre>
     *
     * <code>string cert = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCert() {
      copyOnWrite();
      instance.clearCert();
      return this;
    }
    /**
     * <pre>
     * SSL certificate file, only used if tls=true.
     * </pre>
     *
     * <code>string cert = 3;</code>
     * @param value The bytes for cert to set.
     * @return This builder for chaining.
     */
    public Builder setCertBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCertBytes(value);
      return this;
    }

    /**
     * <pre>
     * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
     * </pre>
     *
     * <code>string sharedSecret = 4;</code>
     * @return The sharedSecret.
     */
    @java.lang.Override
    public java.lang.String getSharedSecret() {
      return instance.getSharedSecret();
    }
    /**
     * <pre>
     * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
     * </pre>
     *
     * <code>string sharedSecret = 4;</code>
     * @return The bytes for sharedSecret.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSharedSecretBytes() {
      return instance.getSharedSecretBytes();
    }
    /**
     * <pre>
     * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
     * </pre>
     *
     * <code>string sharedSecret = 4;</code>
     * @param value The sharedSecret to set.
     * @return This builder for chaining.
     */
    public Builder setSharedSecret(
        java.lang.String value) {
      copyOnWrite();
      instance.setSharedSecret(value);
      return this;
    }
    /**
     * <pre>
     * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
     * </pre>
     *
     * <code>string sharedSecret = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSharedSecret() {
      copyOnWrite();
      instance.clearSharedSecret();
      return this;
    }
    /**
     * <pre>
     * In case if there is a secret shared between server and client (regardless of TLS usage). Applicable for transport=GRPC only. Optional
     * </pre>
     *
     * <code>string sharedSecret = 4;</code>
     * @param value The bytes for sharedSecret to set.
     * @return This builder for chaining.
     */
    public Builder setSharedSecretBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSharedSecretBytes(value);
      return this;
    }

    /**
     * <pre>
     * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
     * </pre>
     *
     * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
     * @return The enum numeric value on the wire for transport.
     */
    @java.lang.Override
    public int getTransportValue() {
      return instance.getTransportValue();
    }
    /**
     * <pre>
     * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
     * </pre>
     *
     * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
     * @param value The transport to set.
     * @return This builder for chaining.
     */
    public Builder setTransportValue(int value) {
      copyOnWrite();
      instance.setTransportValue(value);
      return this;
    }
    /**
     * <pre>
     * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
     * </pre>
     *
     * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
     * @return The transport.
     */
    @java.lang.Override
    public io.bokun.inventory.service.plugin.grpc.PluginTransport getTransport() {
      return instance.getTransport();
    }
    /**
     * <pre>
     * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
     * </pre>
     *
     * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
     * @param value The enum numeric value on the wire for transport to set.
     * @return This builder for chaining.
     */
    public Builder setTransport(io.bokun.inventory.service.plugin.grpc.PluginTransport value) {
      copyOnWrite();
      instance.setTransport(value);
      return this;
    }
    /**
     * <pre>
     * Type of transport protocol this plugin requires. Optional, defaults to GRPC if unset.
     * </pre>
     *
     * <code>.io.bokun.inventory.service.plugin.grpc.PluginTransport transport = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTransport() {
      copyOnWrite();
      instance.clearTransport();
      return this;
    }

    /**
     * <pre>
     * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
     */
    @java.lang.Override
    public boolean hasBasicAuthUsername() {
      return instance.hasBasicAuthUsername();
    }
    /**
     * <pre>
     * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.StringValue getBasicAuthUsername() {
      return instance.getBasicAuthUsername();
    }
    /**
     * <pre>
     * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
     */
    public Builder setBasicAuthUsername(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.setBasicAuthUsername(value);
      return this;
      }
    /**
     * <pre>
     * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
     */
    public Builder setBasicAuthUsername(
        com.google.protobuf.StringValue.Builder builderForValue) {
      copyOnWrite();
      instance.setBasicAuthUsername(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
     */
    public Builder mergeBasicAuthUsername(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.mergeBasicAuthUsername(value);
      return this;
    }
    /**
     * <pre>
     * Username for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthUsername = 6;</code>
     */
    public Builder clearBasicAuthUsername() {  copyOnWrite();
      instance.clearBasicAuthUsername();
      return this;
    }

    /**
     * <pre>
     * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
     */
    @java.lang.Override
    public boolean hasBasicAuthPassword() {
      return instance.hasBasicAuthPassword();
    }
    /**
     * <pre>
     * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.StringValue getBasicAuthPassword() {
      return instance.getBasicAuthPassword();
    }
    /**
     * <pre>
     * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
     */
    public Builder setBasicAuthPassword(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.setBasicAuthPassword(value);
      return this;
      }
    /**
     * <pre>
     * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
     */
    public Builder setBasicAuthPassword(
        com.google.protobuf.StringValue.Builder builderForValue) {
      copyOnWrite();
      instance.setBasicAuthPassword(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
     */
    public Builder mergeBasicAuthPassword(com.google.protobuf.StringValue value) {
      copyOnWrite();
      instance.mergeBasicAuthPassword(value);
      return this;
    }
    /**
     * <pre>
     * Password for basic authentication to use for every request. Applicable for transport=REST only. Optional.
     * </pre>
     *
     * <code>.google.protobuf.StringValue basicAuthPassword = 7;</code>
     */
    public Builder clearBasicAuthPassword() {  copyOnWrite();
      instance.clearBasicAuthPassword();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.bokun.inventory.service.plugin.grpc.PluginUrl)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.bokun.inventory.service.plugin.grpc.PluginUrl();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "url_",
            "tls_",
            "cert_",
            "sharedSecret_",
            "transport_",
            "basicAuthUsername_",
            "basicAuthPassword_",
          };
          java.lang.String info =
              "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0208\u0002\u0007" +
              "\u0003\u0208\u0004\u0208\u0005\f\u0006\t\u0007\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.bokun.inventory.service.plugin.grpc.PluginUrl> parser = PARSER;
        if (parser == null) {
          synchronized (io.bokun.inventory.service.plugin.grpc.PluginUrl.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.bokun.inventory.service.plugin.grpc.PluginUrl>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:io.bokun.inventory.service.plugin.grpc.PluginUrl)
  private static final io.bokun.inventory.service.plugin.grpc.PluginUrl DEFAULT_INSTANCE;
  static {
    PluginUrl defaultInstance = new PluginUrl();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      PluginUrl.class, defaultInstance);
  }

  public static io.bokun.inventory.service.plugin.grpc.PluginUrl getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PluginUrl> PARSER;

  public static com.google.protobuf.Parser<PluginUrl> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

