/*
 * Channel Manager REST API
 * Channel Manager REST API. You can find out more about Channel Manager [here](https://www.bokun.io/sell/channel-manager).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@bokun.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.bokun.inventory.plugin.api.rest;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.bokun.inventory.plugin.api.rest.Contact;
import io.bokun.inventory.plugin.api.rest.ExtraBooking;
import io.bokun.inventory.plugin.api.rest.Price;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Passenger
 */

public class Passenger {
  @SerializedName("pricingCategoryId")
  private String pricingCategoryId = null;

  @SerializedName("contact")
  private Contact contact = null;

  @SerializedName("pricePerPassenger")
  private Price pricePerPassenger = null;

  @SerializedName("extraBookings")
  private List<ExtraBooking> extraBookings = null;

  public Passenger pricingCategoryId(String pricingCategoryId) {
    this.pricingCategoryId = pricingCategoryId;
    return this;
  }

   /**
   * Get pricingCategoryId
   * @return pricingCategoryId
  **/
  @ApiModelProperty(value = "")
  public String getPricingCategoryId() {
    return pricingCategoryId;
  }

  public void setPricingCategoryId(String pricingCategoryId) {
    this.pricingCategoryId = pricingCategoryId;
  }

  public Passenger contact(Contact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @ApiModelProperty(required = true, value = "")
  public Contact getContact() {
    return contact;
  }

  public void setContact(Contact contact) {
    this.contact = contact;
  }

  public Passenger pricePerPassenger(Price pricePerPassenger) {
    this.pricePerPassenger = pricePerPassenger;
    return this;
  }

   /**
   * Get pricePerPassenger
   * @return pricePerPassenger
  **/
  @ApiModelProperty(value = "")
  public Price getPricePerPassenger() {
    return pricePerPassenger;
  }

  public void setPricePerPassenger(Price pricePerPassenger) {
    this.pricePerPassenger = pricePerPassenger;
  }

  public Passenger extraBookings(List<ExtraBooking> extraBookings) {
    this.extraBookings = extraBookings;
    return this;
  }

  public Passenger addExtraBookingsItem(ExtraBooking extraBookingsItem) {
    if (this.extraBookings == null) {
      this.extraBookings = new ArrayList<ExtraBooking>();
    }
    this.extraBookings.add(extraBookingsItem);
    return this;
  }

   /**
   * Get extraBookings
   * @return extraBookings
  **/
  @ApiModelProperty(value = "")
  public List<ExtraBooking> getExtraBookings() {
    return extraBookings;
  }

  public void setExtraBookings(List<ExtraBooking> extraBookings) {
    this.extraBookings = extraBookings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Passenger passenger = (Passenger) o;
    return Objects.equals(this.pricingCategoryId, passenger.pricingCategoryId) &&
        Objects.equals(this.contact, passenger.contact) &&
        Objects.equals(this.pricePerPassenger, passenger.pricePerPassenger) &&
        Objects.equals(this.extraBookings, passenger.extraBookings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pricingCategoryId, contact, pricePerPassenger, extraBookings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Passenger {\n");
    
    sb.append("    pricingCategoryId: ").append(toIndentedString(pricingCategoryId)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    pricePerPassenger: ").append(toIndentedString(pricePerPassenger)).append("\n");
    sb.append("    extraBookings: ").append(toIndentedString(extraBookings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

