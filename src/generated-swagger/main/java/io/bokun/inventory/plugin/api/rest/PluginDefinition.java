/*
 * Channel Manager REST API
 * Channel Manager REST API. You can find out more about Channel Manager [here](https://www.bokun.io/sell/channel-manager).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@bokun.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.bokun.inventory.plugin.api.rest;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.bokun.inventory.plugin.api.rest.PluginCapability;
import io.bokun.inventory.plugin.api.rest.PluginConfigurationParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PluginDefinition
 */

public class PluginDefinition {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("capabilities")
  private List<PluginCapability> capabilities = new ArrayList<PluginCapability>();

  @SerializedName("parameters")
  private List<PluginConfigurationParameter> parameters = new ArrayList<PluginConfigurationParameter>();

  public PluginDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PluginDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PluginDefinition capabilities(List<PluginCapability> capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  public PluginDefinition addCapabilitiesItem(PluginCapability capabilitiesItem) {
    this.capabilities.add(capabilitiesItem);
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @ApiModelProperty(required = true, value = "")
  public List<PluginCapability> getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(List<PluginCapability> capabilities) {
    this.capabilities = capabilities;
  }

  public PluginDefinition parameters(List<PluginConfigurationParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public PluginDefinition addParametersItem(PluginConfigurationParameter parametersItem) {
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(required = true, value = "")
  public List<PluginConfigurationParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<PluginConfigurationParameter> parameters) {
    this.parameters = parameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginDefinition pluginDefinition = (PluginDefinition) o;
    return Objects.equals(this.name, pluginDefinition.name) &&
        Objects.equals(this.description, pluginDefinition.description) &&
        Objects.equals(this.capabilities, pluginDefinition.capabilities) &&
        Objects.equals(this.parameters, pluginDefinition.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, capabilities, parameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginDefinition {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

