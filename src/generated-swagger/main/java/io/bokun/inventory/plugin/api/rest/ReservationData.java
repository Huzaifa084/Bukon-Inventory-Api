/*
 * Channel Manager REST API
 * Channel Manager REST API. You can find out more about Channel Manager [here](https://www.bokun.io/sell/channel-manager).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@bokun.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.bokun.inventory.plugin.api.rest;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.bokun.inventory.plugin.api.rest.BookingSource;
import io.bokun.inventory.plugin.api.rest.Contact;
import io.bokun.inventory.plugin.api.rest.DateYMD;
import io.bokun.inventory.plugin.api.rest.PickupDropoffPlace;
import io.bokun.inventory.plugin.api.rest.Reservation;
import io.bokun.inventory.plugin.api.rest.Time;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ReservationData
 */

public class ReservationData {
  @SerializedName("productId")
  private String productId = null;

  @SerializedName("customerContact")
  private Contact customerContact = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("date")
  private DateYMD date = null;

  @SerializedName("time")
  private Time time = null;

  @SerializedName("pickupRequired")
  private Boolean pickupRequired = null;

  @SerializedName("customPickupPlace")
  private String customPickupPlace = null;

  @SerializedName("predefinedPickupPlace")
  private PickupDropoffPlace predefinedPickupPlace = null;

  @SerializedName("dropoffRequired")
  private Boolean dropoffRequired = null;

  @SerializedName("customDropoffPlace")
  private String customDropoffPlace = null;

  @SerializedName("predefinedDropoffPlace")
  private PickupDropoffPlace predefinedDropoffPlace = null;

  @SerializedName("reservations")
  private List<Reservation> reservations = new ArrayList<Reservation>();

  @SerializedName("platformId")
  private String platformId = null;

  @SerializedName("bookingSource")
  private BookingSource bookingSource = null;

  @SerializedName("externalSaleId")
  private String externalSaleId = null;

  @SerializedName("agentCode")
  private String agentCode = null;

  @SerializedName("platformBookingId")
  private String platformBookingId = null;

  public ReservationData productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public ReservationData customerContact(Contact customerContact) {
    this.customerContact = customerContact;
    return this;
  }

   /**
   * Get customerContact
   * @return customerContact
  **/
  @ApiModelProperty(value = "")
  public Contact getCustomerContact() {
    return customerContact;
  }

  public void setCustomerContact(Contact customerContact) {
    this.customerContact = customerContact;
  }

  public ReservationData notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @ApiModelProperty(value = "")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public ReservationData date(DateYMD date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(required = true, value = "")
  public DateYMD getDate() {
    return date;
  }

  public void setDate(DateYMD date) {
    this.date = date;
  }

  public ReservationData time(Time time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")
  public Time getTime() {
    return time;
  }

  public void setTime(Time time) {
    this.time = time;
  }

  public ReservationData pickupRequired(Boolean pickupRequired) {
    this.pickupRequired = pickupRequired;
    return this;
  }

   /**
   * Get pickupRequired
   * @return pickupRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean getPickupRequired() {
    return pickupRequired;
  }

  public void setPickupRequired(Boolean pickupRequired) {
    this.pickupRequired = pickupRequired;
  }

  public ReservationData customPickupPlace(String customPickupPlace) {
    this.customPickupPlace = customPickupPlace;
    return this;
  }

   /**
   * Get customPickupPlace
   * @return customPickupPlace
  **/
  @ApiModelProperty(value = "")
  public String getCustomPickupPlace() {
    return customPickupPlace;
  }

  public void setCustomPickupPlace(String customPickupPlace) {
    this.customPickupPlace = customPickupPlace;
  }

  public ReservationData predefinedPickupPlace(PickupDropoffPlace predefinedPickupPlace) {
    this.predefinedPickupPlace = predefinedPickupPlace;
    return this;
  }

   /**
   * Get predefinedPickupPlace
   * @return predefinedPickupPlace
  **/
  @ApiModelProperty(value = "")
  public PickupDropoffPlace getPredefinedPickupPlace() {
    return predefinedPickupPlace;
  }

  public void setPredefinedPickupPlace(PickupDropoffPlace predefinedPickupPlace) {
    this.predefinedPickupPlace = predefinedPickupPlace;
  }

  public ReservationData dropoffRequired(Boolean dropoffRequired) {
    this.dropoffRequired = dropoffRequired;
    return this;
  }

   /**
   * Get dropoffRequired
   * @return dropoffRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean getDropoffRequired() {
    return dropoffRequired;
  }

  public void setDropoffRequired(Boolean dropoffRequired) {
    this.dropoffRequired = dropoffRequired;
  }

  public ReservationData customDropoffPlace(String customDropoffPlace) {
    this.customDropoffPlace = customDropoffPlace;
    return this;
  }

   /**
   * Get customDropoffPlace
   * @return customDropoffPlace
  **/
  @ApiModelProperty(value = "")
  public String getCustomDropoffPlace() {
    return customDropoffPlace;
  }

  public void setCustomDropoffPlace(String customDropoffPlace) {
    this.customDropoffPlace = customDropoffPlace;
  }

  public ReservationData predefinedDropoffPlace(PickupDropoffPlace predefinedDropoffPlace) {
    this.predefinedDropoffPlace = predefinedDropoffPlace;
    return this;
  }

   /**
   * Get predefinedDropoffPlace
   * @return predefinedDropoffPlace
  **/
  @ApiModelProperty(value = "")
  public PickupDropoffPlace getPredefinedDropoffPlace() {
    return predefinedDropoffPlace;
  }

  public void setPredefinedDropoffPlace(PickupDropoffPlace predefinedDropoffPlace) {
    this.predefinedDropoffPlace = predefinedDropoffPlace;
  }

  public ReservationData reservations(List<Reservation> reservations) {
    this.reservations = reservations;
    return this;
  }

  public ReservationData addReservationsItem(Reservation reservationsItem) {
    this.reservations.add(reservationsItem);
    return this;
  }

   /**
   * Get reservations
   * @return reservations
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Reservation> getReservations() {
    return reservations;
  }

  public void setReservations(List<Reservation> reservations) {
    this.reservations = reservations;
  }

  public ReservationData platformId(String platformId) {
    this.platformId = platformId;
    return this;
  }

   /**
   * Get platformId
   * @return platformId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPlatformId() {
    return platformId;
  }

  public void setPlatformId(String platformId) {
    this.platformId = platformId;
  }

  public ReservationData bookingSource(BookingSource bookingSource) {
    this.bookingSource = bookingSource;
    return this;
  }

   /**
   * Get bookingSource
   * @return bookingSource
  **/
  @ApiModelProperty(required = true, value = "")
  public BookingSource getBookingSource() {
    return bookingSource;
  }

  public void setBookingSource(BookingSource bookingSource) {
    this.bookingSource = bookingSource;
  }

  public ReservationData externalSaleId(String externalSaleId) {
    this.externalSaleId = externalSaleId;
    return this;
  }

   /**
   * Get externalSaleId
   * @return externalSaleId
  **/
  @ApiModelProperty(value = "")
  public String getExternalSaleId() {
    return externalSaleId;
  }

  public void setExternalSaleId(String externalSaleId) {
    this.externalSaleId = externalSaleId;
  }

  public ReservationData agentCode(String agentCode) {
    this.agentCode = agentCode;
    return this;
  }

   /**
   * Get agentCode
   * @return agentCode
  **/
  @ApiModelProperty(value = "")
  public String getAgentCode() {
    return agentCode;
  }

  public void setAgentCode(String agentCode) {
    this.agentCode = agentCode;
  }

  public ReservationData platformBookingId(String platformBookingId) {
    this.platformBookingId = platformBookingId;
    return this;
  }

   /**
   * Get platformBookingId
   * @return platformBookingId
  **/
  @ApiModelProperty(value = "")
  public String getPlatformBookingId() {
    return platformBookingId;
  }

  public void setPlatformBookingId(String platformBookingId) {
    this.platformBookingId = platformBookingId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationData reservationData = (ReservationData) o;
    return Objects.equals(this.productId, reservationData.productId) &&
        Objects.equals(this.customerContact, reservationData.customerContact) &&
        Objects.equals(this.notes, reservationData.notes) &&
        Objects.equals(this.date, reservationData.date) &&
        Objects.equals(this.time, reservationData.time) &&
        Objects.equals(this.pickupRequired, reservationData.pickupRequired) &&
        Objects.equals(this.customPickupPlace, reservationData.customPickupPlace) &&
        Objects.equals(this.predefinedPickupPlace, reservationData.predefinedPickupPlace) &&
        Objects.equals(this.dropoffRequired, reservationData.dropoffRequired) &&
        Objects.equals(this.customDropoffPlace, reservationData.customDropoffPlace) &&
        Objects.equals(this.predefinedDropoffPlace, reservationData.predefinedDropoffPlace) &&
        Objects.equals(this.reservations, reservationData.reservations) &&
        Objects.equals(this.platformId, reservationData.platformId) &&
        Objects.equals(this.bookingSource, reservationData.bookingSource) &&
        Objects.equals(this.externalSaleId, reservationData.externalSaleId) &&
        Objects.equals(this.agentCode, reservationData.agentCode) &&
        Objects.equals(this.platformBookingId, reservationData.platformBookingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, customerContact, notes, date, time, pickupRequired, customPickupPlace, predefinedPickupPlace, dropoffRequired, customDropoffPlace, predefinedDropoffPlace, reservations, platformId, bookingSource, externalSaleId, agentCode, platformBookingId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationData {\n");
    
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    customerContact: ").append(toIndentedString(customerContact)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    pickupRequired: ").append(toIndentedString(pickupRequired)).append("\n");
    sb.append("    customPickupPlace: ").append(toIndentedString(customPickupPlace)).append("\n");
    sb.append("    predefinedPickupPlace: ").append(toIndentedString(predefinedPickupPlace)).append("\n");
    sb.append("    dropoffRequired: ").append(toIndentedString(dropoffRequired)).append("\n");
    sb.append("    customDropoffPlace: ").append(toIndentedString(customDropoffPlace)).append("\n");
    sb.append("    predefinedDropoffPlace: ").append(toIndentedString(predefinedDropoffPlace)).append("\n");
    sb.append("    reservations: ").append(toIndentedString(reservations)).append("\n");
    sb.append("    platformId: ").append(toIndentedString(platformId)).append("\n");
    sb.append("    bookingSource: ").append(toIndentedString(bookingSource)).append("\n");
    sb.append("    externalSaleId: ").append(toIndentedString(externalSaleId)).append("\n");
    sb.append("    agentCode: ").append(toIndentedString(agentCode)).append("\n");
    sb.append("    platformBookingId: ").append(toIndentedString(platformBookingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

